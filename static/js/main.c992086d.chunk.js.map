{"version":3,"sources":["features/app.types.ts","features/users/usersReducer/user.actions.ts","features/users/usersReducer/user.selector.ts","ui-components/userProfileMenu/UserProfileMenu.tsx","ui-components/navBar/NavBar.tsx","features/events/eventListing/EventListingCard.tsx","features/events/eventsReducer/event.selector.ts","features/events/eventListing/EventListingModal.tsx","features/applications/applicationsReducer/application.interface.ts","features/applications/applicationsReducer/application.actions.ts","features/applications/applyEventModal/ApplyEventModal.tsx","features/events/eventsReducer/event.actions.ts","pages/Events.tsx","features/users/usersReducer/user.interface.ts","ui-components/createAccountSteps/SelectUserType.tsx","features/events/eventsReducer/event.interface.ts","ui-components/createAccountSteps/AccountInfoForm.tsx","pages/RegisterUser.tsx","features/applications/applicationsReducer/application.selector.ts","features/applications/applicantContent/ApplicantContent.tsx","features/applications/applicantsModal/ApplicantsModal.tsx","features/events/hostEventListingCard/HostEventListingCard.tsx","features/events/createEventModal/CreateEventModal.tsx","ui-components/eventManagerNavBar/EventManagerNavBar.tsx","pages/EventsDashboard.tsx","pages/SignIn.tsx","features/applications/applicationCard/ApplicationCard.tsx","pages/Applications.tsx","pages/Profile.tsx","pages/userTesting/UserTesting.tsx","pages/userTesting/CheckboxMenu.tsx","pages/userTesting/DropdownMenu.tsx","pages/userTesting/TestComplete.tsx","App.tsx","reportWebVitals.ts","features/events/eventsReducer/event.reducer.ts","features/users/usersReducer/user.reducer.ts","features/applications/applicationsReducer/application.reducer.ts","store.ts","index.tsx"],"names":["ADD_EVENT","ADD_APP_TO_EVENT","loginUser","currUser","type","payload","selectUsersState","state","users","selectUsers","selectUser","userId","selectCurrUserId","user","UserProfileMenu","dispatch","useDispatch","currUserId","useSelector","userMenu","Item","to","onClick","logoutUser","className","overlay","trigger","size","icon","UserOutlined","Text","firstName","lastName","DownOutlined","NavBar","location","useLocation","defaultUnderline","activeUnderline","pathname","Typography","Title","EventListingCard","event","onApply","name","id","musicGenre","audienceSize","startDate","accessibility","endDate","console","log","map","x","accessSettings","ClockCircleOutlined","format","TeamOutlined","TagsOutlined","Object","values","color","selectEvents","events","selectEventsState","selectEvent","eventId","EventListingModal","closeModal","description","visible","onOk","onCancel","footer","Status","changeAppStatus","newStatus","appId","idGenerator","ApplyEventModal","useState","performName","setPerformName","performDescription","setPerformDescription","newApplication","status","pending","dateApplied","moment","newAppId","addApplicationToEvent","email","layout","label","placeholder","value","onChange","e","target","TextArea","UploadOutlined","Tabs","TabPane","Events","isEventModalVisible","setEventModalVisible","isApplyEventModalVisible","setApplyEventModalVisible","currEvent","setCurrEvent","handleOnApply","useHistory","key","eventsCardList","keys","length","eventModal","applyModal","level","UserType","SelectUserType","onFinish","onNext","Musician","newUserType","setNewUserType","selected","setSelected","handleOnSelect","userType","selectedStyle","defaultStyle","musicianStyle","hostStyle","Host","AudienceSize","AccessibilityTypes","MusicGenreType","YearsExperienceType","EventType","AccountInfoForm","onBack","setFirstName","setLastName","setEmail","password","setPassword","setAccessibility","requiredMark","setRequiredMarkType","history","accessibilityOptions","onValuesChange","initialValues","rules","required","message","Password","Group","options","checkedValues","toString","newUser","addUser","push","RegisterUser","initialUserState","appIds","eventIds","setNewUser","step","setStep","RenderStep","handleOnEdit","handleNext","handleBack","orientation","selectApplications","applications","selectApplicationState","ApplicantContent","onStatusChangeRequest","application","selectApplication","StatusTag","accepted","rejected","handleStatusChangeRequest","ApplicantsModal","statusChange","setStatusChange","confirmVisible","setConfirmVisible","currAppId","setCurrAppId","handleOnStatusChangeRequest","ApplicantConfirm","applicants","HostEventListingCard","ApplicantsModalVisibility","setApplicantsModalVisibility","applicantsModal","Input","RangePicker","DatePicker","Option","Select","CreateEventModal","eventName","setEventName","eventDescription","setEventDescription","setLocation","setStartDate","setEndDate","Small","setAudienceSize","setMusicGenre","Error","newId","newEvent","addEvent","dateRange","showTime","Button","style","display","Medium","Large","mode","checkedValue","EventManagerNavBar","isCreateEventVisible","setIsCreateEventVisible","createEventModal","EventsDashboard","noEventsMessage","SignIn","loginErrorVisible","setLoginErrorVisible","forEach","selectUserIdByEmail","LoginError","ApplicationCard","onViewApplication","formattedDate","Applications","setAppModalVisible","handleViewApp","applicationsCardList","Profile","UserTesting","href","CheckboxMenu","index","marginLeft","DropDownMenu","allowClear","width","TestComplete","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","event1","event2","event3","initialState","musician","host","isLoggedIn","dummyApp","rootReducer","combineReducers","action","updatedAppIds","editedUser","updatedEvents","updatedUser","newApp","updatedApp","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c992086d.chunk.js","sourcesContent":["import {Event} from \"./events/eventsReducer/event.interface\"\nimport {User} from \"./users/usersReducer/user.interface\"\nimport {Application, Status} from \"./applications/applicationsReducer/application.interface\";\n\nexport const ADD_USER = \"ADD_USER\";\nexport const EDIT_USER = \"EDIT_USER\";\nexport const LOGIN_USER = \"LOGIN_USER\";\nexport const ADD_EVENT_TO_USER = \"ADD_EVENT_TO_USER\";\nexport const LOGOUT_USER = \"LOGOUT_USER\";\n\nexport const ADD_EVENT = \"ADD_EVENT\";\nexport const ADD_APP_TO_EVENT = \"ADD_APP_TO_EVENT\";\n\nexport const ADD_APPLICATION = \"ADD_APPLICATION\";\nexport const CHANGE_APP_STATUS = \"CHANGE_APP_STATUS\";\n\nexport interface AddEventAction {\n    type: typeof ADD_EVENT;\n    payload: Event;\n}\n\nexport interface EditUserAction {\n    type: typeof EDIT_USER;\n    payload: User;\n}\nexport interface AddUserAction {\n    type: typeof ADD_USER;\n    payload: User;\n}\n\nexport interface LoginUserAction {\n    type: typeof LOGIN_USER;\n    payload: number;\n}\n\nexport interface AddEventToUserAction {\n    type: typeof ADD_EVENT_TO_USER;\n    payload: number;\n}\n\nexport interface AddApplicationAction {\n    type: typeof ADD_APPLICATION;\n    payload: Application;\n}\n\nexport interface LogoutUserAction {\n    type: typeof LOGOUT_USER;\n    payload: number;\n}\n\nexport interface AddAppToEventAction {\n    type: typeof ADD_APP_TO_EVENT;\n    payload: [number, number];\n}\n\nexport interface ChangeAppStatus {\n    type: typeof CHANGE_APP_STATUS;\n    payload: [Status, number];\n}\n\nexport type AppActionTypes = AddEventAction |\n    AddUserAction |\n    AddApplicationAction |\n    LoginUserAction |\n    AddEventToUserAction |\n    LogoutUserAction |\n    AddAppToEventAction |\n    ChangeAppStatus |\n    EditUserAction;\n","import {ADD_EVENT_TO_USER, ADD_USER, AppActionTypes, EDIT_USER, LOGIN_USER, LOGOUT_USER} from \"../../app.types\";\nimport {User} from \"../usersReducer/user.interface\"\n\nexport function addUser(newUser: User): AppActionTypes {\n    return {\n        type: ADD_USER,\n        payload: newUser,\n    }\n}\n\nexport function editUser(newUser: User): AppActionTypes {\n    return {\n        type: EDIT_USER,\n        payload: newUser,\n    }\n}\n\nexport function loginUser(currUser: number): AppActionTypes {\n    return {\n        type: LOGIN_USER,\n        payload: currUser,\n    }\n}\n\nexport function addEventToUser(eventId: number): AppActionTypes {\n    return {\n        type: ADD_EVENT_TO_USER,\n        payload: eventId,\n    }\n}\n\nexport function logoutUser(currUser: number) : AppActionTypes {\n    return {\n        type: LOGOUT_USER,\n        payload: currUser,\n    }\n}","import {RootState} from \"../../../store\";\n\nexport const selectUsersState = (state: RootState) => state.users;\nexport const selectUsers = (state: RootState) => selectUsersState(state).users;\nexport const selectUser = (userId: number) => {\n    return (state: RootState) => selectUsers(state)[userId]\n}\nexport const selectCurrUserId = (state: RootState) => selectUsersState(state).user;\nexport const selectUserIdByEmail = (email: string) => {\n    return (state: RootState) => {\n        let id = -1;\n        Object.values(selectUsers(state)).forEach(value => {\n            if (value.email === email) {\n                id = value.id;\n            }\n        })\n        return id;\n    }\n}","import {Avatar, Dropdown, Menu} from \"antd\";\nimport {DownOutlined, UserOutlined} from \"@ant-design/icons\";\nimport Text from \"antd/es/typography/Text\";\nimport {Link} from \"react-router-dom\";\nimport {logoutUser} from \"../../features/users/usersReducer/user.actions\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {selectCurrUserId, selectUser} from \"../../features/users/usersReducer/user.selector\";\n\nexport function UserProfileMenu() {\n    const dispatch = useDispatch();\n\n    const handleSignOut = () => {\n        // 0 is placeholder, logoutUser already knows currentUser\n        dispatch(logoutUser(0));\n    }\n\n    const currUserId = useSelector(selectCurrUserId);\n    const currUser = useSelector(selectUser(currUserId))\n\n    const userMenu =\n        <Menu>\n            <Menu.Item key=\"0\">\n                <Link to={'/profile'}>View Profile</Link>\n            </Menu.Item>\n            {/*<Menu.Item key=\"1\">*/}\n            {/*    <Link to={\"/myEvents\"}>Publish Events</Link>*/}\n            {/*</Menu.Item>*/}\n            <Menu.Item key=\"1\">\n                <Link to={`/login`} onClick={handleSignOut}>Sign out</Link>\n            </Menu.Item>\n        </Menu>\n\n    return (\n        <div className={`p-2 rounded hover:bg-blue-50 items-center`}>\n            <Dropdown overlay={userMenu} trigger={['click']}>\n                <div className={`flex space-x-2 items-center`}>\n                    <Avatar size=\"small\" icon={<UserOutlined/>} />\n                    <Text>{currUser.firstName} {currUser.lastName}</Text>\n                    <DownOutlined />\n                </div>\n            </Dropdown>\n        </div>\n    )\n}","import {Link, useHistory, useLocation} from \"react-router-dom\";\nimport {Avatar, Button, Dropdown, Menu} from \"antd\";\nimport {UserOutlined, DownOutlined} from '@ant-design/icons';\nimport {useState} from \"react\";\nimport {CreateEventModal} from \"../../features/events/createEventModal/CreateEventModal\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {logoutUser} from \"../../features/users/usersReducer/user.actions\";\nimport {selectCurrUserId, selectUser} from \"../../features/users/usersReducer/user.selector\";\nimport Title from \"antd/es/typography/Title\";\nimport Text from \"antd/es/typography/Text\";\nimport {UserProfileMenu} from \"../userProfileMenu/UserProfileMenu\";\n\nexport function NavBar() {\n    const location = useLocation();\n\n    const defaultUnderline = <div className={`mt-1 border-transparent border-2`}> </div>;\n    const activeUnderline = <div className={`mt-1 border-2 border-blue-400 rounded`}> </div>;\n\n    return (\n        <>\n            <div className={`border-b`}>\n                <div className={`max-w-3xl m-auto py-7 flex justify-between items-center`}>\n                    <div className={`space-x-10 flex items-center`}>\n                        {/*<div className={`p-1 bg-blue-100 self-center`}>*/}\n                        {/*    <p className={`m-0`}>Logo/App Name</p>*/}\n                        {/*</div>*/}\n\n                        <div>\n                            <Link className={`text-gray-900 text-base`} to=\"/events\">Home</Link>\n                            {location.pathname === \"/events\" ?  activeUnderline : defaultUnderline}\n                        </div>\n                        <div>\n                            <Link className={`text-gray-900 text-base`} to=\"/applications\">My Applications</Link>\n                            {location.pathname === \"/applications\" ? activeUnderline : defaultUnderline}\n                        </div>\n                    </div>\n                    <div className={`flex items-center space-x-5`}>\n                        {/*<Button type=\"ghost\" onClick={() => history.push(\"/myEvents\")}>Host an Event</Button>*/}\n                        <UserProfileMenu />\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}","import {Button, Card, Tag} from \"antd\";\nimport {Event} from \"../eventsReducer/event.interface\"\nimport {Typography} from \"antd\";\nimport {TeamOutlined, TagsOutlined, ClockCircleOutlined} from \"@ant-design/icons\";\nimport {Link} from \"react-router-dom\";\nimport {useState} from \"react\";\nimport {ApplyEventModal} from \"../../applications/applyEventModal/ApplyEventModal\";\n\nconst {Title} = Typography;\n\ninterface Props {\n    onClick: () => void;\n    event: Event\n    onApply: () => void;\n}\nexport function EventListingCard({onClick, event, onApply}: Props) {\n    const {id, name, musicGenre, audienceSize, startDate, endDate, accessibility} = event;\n\n    if (musicGenre) {\n        console.log(musicGenre.map((x) => x))\n    }\n\n    let accessSettings: string[] = [];\n    if (accessibility) {\n        accessSettings = accessibility.map((x) => x);\n    }\n\n    return (\n        <>\n            <div className={`border-b border-gray-200 py-5`}>\n                <div className={`flex justify-between`}>\n                    <div className={`space-y-4`}>\n                        <div className={`space-y-1`}>\n                            {/*<p>{endDate.format('MM/DD/YYYY HH:mm')}</p>*/}\n                            <p onClick={onClick} className={`text-blue-600 hover:text-blue-400 text-base font-semibold`}>{name}</p>\n                        </div>\n                        <div className={`space-y-2`}>\n                            <div className={`flex items-center space-x-2`}>\n                                <ClockCircleOutlined />\n                                <p className={`text-gray-700 m-0`}>{startDate.format('MMMM D, yyyy') + \" at \" + startDate.format('h:mm A')}</p>\n                            </div>\n                            <div className={`flex items-center space-x-2`}>\n                                <TeamOutlined />\n                                <p className={`text-gray-700 m-0`}>{audienceSize} people</p>\n                            </div>\n                            <div className={`flex items-center space-x-2`}>\n                                <TagsOutlined />\n                                <p className={`text-gray-700 m-0`}>{musicGenre ? musicGenre.map((x) => <Tag>{x}</Tag>) : null}</p>\n                            </div>\n                            <div className={`pt-2 space-y-3`}>\n                                <p className={`m-0`}>Hosted by Dummy User</p>\n                                {Object.values(accessSettings).map((x) => (\n                                    <Tag color=\"purple\">{x}</Tag>\n                                ))}\n                            </div>\n                        </div>\n                    </div>\n                    <div>\n                        <Button type=\"link\" onClick={onApply}>Apply</Button>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}","import {RootState} from \"../../../store\"\nimport {selectCurrUserId, selectUser} from \"../../users/usersReducer/user.selector\";\n\nexport const selectEventsState = (state: RootState) => state.events\n\nexport const selectEvents = (state: RootState) => selectEventsState(state).events;\n\nexport const selectEvent = (eventId: number) => {\n    return (state: RootState) => selectEvents(state)[eventId];\n}\n\nexport const selectEventsByUser = (userId: number) => {\n    return (state: RootState) => selectUser(userId)(state).eventIds.map(\n            id => selectEvent(id)(state))\n    // error check for if the event doesn't exist\n}","import {Button, Modal, Tag, Typography} from \"antd\";\nimport {Event} from \"../eventsReducer/event.interface\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {selectEvent} from \"../eventsReducer/event.selector\";\nimport {NavBar} from \"../../../ui-components/navBar/NavBar\";\nimport React, {useState} from \"react\";\nimport {useHistory, useParams} from \"react-router-dom\";\nimport {ClockCircleOutlined, TagsOutlined, TeamOutlined} from \"@ant-design/icons\";\n\nconst {Title} = Typography;\n\ninterface Props {\n    eventId: number;\n    closeModal: () => void;\n    onApply: () => void;\n}\n\nexport function EventListingModal({eventId, closeModal, onApply} : Props) {\n    const event = useSelector(selectEvent(eventId));\n\n    if (!event) {\n        return <Title>Event not found!</Title>\n    }\n\n    const {name, description, musicGenre, audienceSize, startDate, endDate, accessibility} = event;\n\n    let accessSettings: string[] = [];\n    if (accessibility) {\n        accessSettings = accessibility.map((x) => x);\n    }\n\n    return (\n            <Modal visible={true}\n                   onOk={closeModal}\n                   onCancel={closeModal}\n                   footer={[\n                       <Button key=\"cancel\" onClick={closeModal}>\n                           Close\n                       </Button>,\n                       <Button key=\"submit\" type=\"primary\" onClick={onApply}>\n                           Apply\n                       </Button>,\n                   ]}\n            >\n                <div className={`space-y-5`}>\n                    <div>\n                        <p className={`text-lg font-bold m-0`}>{name}</p>\n                        <p className={`m-0`}>{description}</p>\n                    </div>\n                    <div className={`space-y-2`}>\n                        <div className={`flex items-center space-x-2`}>\n                            <ClockCircleOutlined />\n                            <p className={`text-gray-700 m-0`}>{startDate.format('MMMM D, yyyy') + \" at \" + startDate.format('h:mm A')}</p>\n                        </div>\n                        <div className={`flex items-center space-x-2`}>\n                            <TagsOutlined />\n                            <p className={`text-gray-700 m-0`}>{musicGenre ? musicGenre.map((x) => <Tag>{x}</Tag>) : null}</p>\n                        </div>\n                        <div className={`flex items-center space-x-2`}>\n                            <TeamOutlined />\n                            <p className={`text-gray-700 m-0`}>{audienceSize} people</p>\n                        </div>\n                    </div>\n                    <div className={`pt-2 space-y-2`}>\n                        <p className={`m-0`}>Hosted by Dummy User</p>\n                        {Object.values(accessSettings).map((x) => (\n                            <Tag color=\"purple\">{x}</Tag>\n                        ))}\n                    </div>\n                </div>\n            </Modal>\n    )\n}","import moment from \"moment\";\n\nexport interface Application {\n    id: number;\n    userId: number;\n    performName: string;\n    performDescription: string;\n    eventId: number;\n    dateApplied: moment.Moment;\n    // true = accepted, false = rejected (for now!)\n    status: Status;\n}\n\nexport enum Status {\n    accepted,\n    rejected,\n    pending\n}","import {ADD_APPLICATION, AppActionTypes, CHANGE_APP_STATUS} from \"../../app.types\";\nimport {Application, Status} from \"./application.interface\";\n\nexport function addApplication(newApp: Application): AppActionTypes {\n    return {\n        type: ADD_APPLICATION,\n        payload: newApp,\n    }\n}\n\nexport function changeAppStatus(newStatus: Status, appId: number): AppActionTypes {\n    return {\n        type: CHANGE_APP_STATUS,\n        payload: [newStatus, appId]\n    }\n}","import {Button, Form, Input, Modal, Select, Upload} from \"antd\";\nimport {useState} from \"react\";\nimport TextArea from \"antd/es/input/TextArea\";\nimport {Application, Status} from \"../applicationsReducer/application.interface\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {addApplication} from \"../applicationsReducer/application.actions\";\nimport {selectCurrUserId, selectUser} from \"../../users/usersReducer/user.selector\";\nimport {selectEvent} from \"../../events/eventsReducer/event.selector\";\nimport {UploadOutlined} from \"@ant-design/icons\";\nimport {addApplicationToEvent} from \"../../events/eventsReducer/event.actions\";\nimport moment from \"moment\";\n\nlet idGenerator = 1;\n\ninterface Props {\n    eventId: number;\n    closeModal: () => void;\n}\n\nexport function ApplyEventModal({eventId, closeModal} : Props) {\n    const [performName, setPerformName] = useState(\"\");\n    const [performDescription, setPerformDescription] = useState(\"\");\n\n    const dispatch = useDispatch();\n\n    const currUserId = useSelector(selectCurrUserId);\n    const user = useSelector(selectUser(currUserId))\n    const event = useSelector(selectEvent(eventId));\n\n    const handleOnOk = () => {\n        const id = idGenerator++;\n        let newApplication: Application = {\n            id: id,\n            eventId: eventId,\n            status: Status.pending,\n            userId: currUserId,\n            performName: performName,\n            performDescription: performDescription,\n            dateApplied: moment(),\n        }\n        dispatch(addApplication(newApplication));\n        dispatch(addApplicationToEvent(id, eventId));\n        closeModal()\n    }\n\n    return (\n        <Modal visible={true} onCancel={closeModal} onOk={handleOnOk}>\n            <div className={`space-y-1`}>\n                <p className={`text-lg font-bold m-0`}>Apply for {event.name}</p>\n                <p className={`m-0 text-gray-500`}>Please fill out information about your performance below.</p>\n            </div>\n            <div className={`py-5 space-y-1`}>\n                <p className={`m-0`}>Name: <b>{user.firstName} {user.lastName} </b></p>\n                <p className={`m-0`}>Email Address: <b>{user.email}</b></p>\n            </div>\n            <Form layout=\"vertical\">\n                <Form.Item label=\"Performance Name:\" name=\"performName\">\n                    <Input placeholder=\"Enter the name of your performance\"\n                           value={performName}\n                           onChange={(e) => setPerformName(e.target.value)}\n                    />\n                </Form.Item>\n                <Form.Item label={\"Performance Description:\"}>\n                    <TextArea placeholder=\"Enter performance description\"\n                              value={performDescription}\n                              onChange={(e) => setPerformDescription(e.target.value)}\n                    />\n                </Form.Item>\n                <Form.Item>\n                    <p>Attach any additional materials (audio, video samples):</p>\n                    <Upload>\n                        <Button icon={<UploadOutlined />}>Click to Upload</Button>\n                    </Upload>\n                </Form.Item>\n            </Form>\n        </Modal>\n    )\n}","import {ADD_APP_TO_EVENT, ADD_EVENT, AppActionTypes} from \"../../app.types\";\nimport {Event} from \"./event.interface\"\n\nexport function addEvent(newEvent: Event): AppActionTypes {\n    return {\n        type: ADD_EVENT,\n        payload: newEvent,\n    };\n}\n\nexport function addApplicationToEvent(newAppId: number, eventId: number): AppActionTypes {\n    return {\n        type: ADD_APP_TO_EVENT,\n        payload: [newAppId, eventId]\n    }\n}","import {NavBar} from \"../ui-components/navBar/NavBar\";\nimport {EventListingCard} from \"../features/events/eventListing/EventListingCard\";\nimport {useSelector} from \"react-redux\";\nimport {selectEvents} from \"../features/events/eventsReducer/event.selector\";\nimport {useState} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport {Empty, Tabs} from \"antd\";\nimport Title from \"antd/es/typography/Title\";\nimport {EventListingModal} from \"../features/events/eventListing/EventListingModal\";\nimport {Event} from \"../features/events/eventsReducer/event.interface\";\nimport {CreateEventModal} from \"../features/events/createEventModal/CreateEventModal\";\nimport {ApplyEventModal} from \"../features/applications/applyEventModal/ApplyEventModal\";\nimport {selectCurrUserId} from \"../features/users/usersReducer/user.selector\";\n\nconst { TabPane } = Tabs;\n\n// interface MatchProps {\n//     match: any;\n// }\n\nexport function Events() {\n    const events = useSelector(selectEvents);\n    const user = useSelector(selectCurrUserId);\n    const [isEventModalVisible, setEventModalVisible] = useState(false);\n    const [isApplyEventModalVisible, setApplyEventModalVisible] = useState(false);\n    const [currEvent, setCurrEvent] = useState(-1);\n    const history = useHistory();\n\n    const handleOnClickEvent = (key: number) => () => {\n        setEventModalVisible(true);\n        setCurrEvent(key)\n    }\n\n    const handleCloseEventModal = () => {\n        setEventModalVisible(false);\n    }\n\n    const handleCloseApplyModal = () => {\n        setApplyEventModalVisible(false);\n    }\n\n    const handleOnApply = (key: number) => () => {\n        setApplyEventModalVisible(true);\n        setCurrEvent(key)\n        setEventModalVisible(false);\n    }\n\n    const eventsCardList = ( Object.keys(events).length === 0) ?\n        <Empty className={`py-20`} description={\"No events available yet!\"} /> :\n        Object.values(events).map((e) => (\n                <EventListingCard\n                    onClick={handleOnClickEvent(e.id)}\n                    event={e}\n                    onApply={handleOnApply(e.id)}\n                />\n            ))\n\n    const eventModal = <EventListingModal eventId={currEvent}\n                                          closeModal={handleCloseEventModal}\n                                          onApply={handleOnApply(currEvent)}\n    />\n\n    const applyModal = <ApplyEventModal eventId={currEvent} closeModal={handleCloseApplyModal} />\n\n    return (\n        <>\n            {isApplyEventModalVisible ? applyModal : null}\n            {isEventModalVisible ? eventModal : null}\n            <NavBar/>\n            <div className={`max-w-3xl m-auto py-16 space-y-8`}>\n                <div>\n                    <Title level={4}>Events</Title>\n                    <p>Explore events near you and apply to perform!</p>\n                </div>\n                <div className={`border-t`}>\n                    {/*<Tabs defaultActiveKey=\"1\">*/}\n                    {/*    <TabPane tab=\"Browse all\" key=\"1\">*/}\n                    {/*        {eventsCardList}*/}\n                    {/*    </TabPane>*/}\n                    {/*</Tabs>*/}\n                    {eventsCardList}\n                </div>\n            </div>\n        </>\n    )\n}","import {AccessibilityTypes} from \"../../events/eventsReducer/event.interface\";\n\nexport interface User {\n    id: number;\n    userType: UserType;\n    appIds: number[];\n    eventIds: number[];\n    firstName: string;\n    lastName: string;\n    email: string;\n    password: string;\n    phoneNumber?: number;\n    accessibility: string[];\n}\n\nexport enum UserType {\n    Host,\n    Musician,\n}","import {useState} from \"react\";\nimport {User, UserType} from \"../../features/users/usersReducer/user.interface\";\nimport Title from \"antd/es/typography/Title\";\nimport {Button} from \"antd\";\n\ninterface Props {\n    user: User;\n    onFinish: (user: User) => void;\n    onNext: () => void;\n}\nexport function SelectUserType({user, onFinish, onNext} : Props) {\n    const [newUserType, setNewUserType] = useState<UserType>(UserType.Musician);\n    const [selected, setSelected] = useState<boolean>(true);\n\n    const handleOnSelect = (userType: UserType) => () => {\n        setNewUserType(userType);\n        if (userType === UserType.Musician) {\n            setSelected(true);\n        } else {\n            setSelected(false);\n        }\n    }\n\n    const handleOnClick = () => {\n        onFinish(\n            {...user,\n                userType: newUserType,\n            });\n        onNext();\n    }\n\n    const selectedStyle = `w-1/2 p-10 ring-blue-500 ring rounded`;\n    const defaultStyle = `w-1/2 p-10 ring-1 ring-gray-300 rounded`;\n\n    const musicianStyle = selected ? selectedStyle : defaultStyle;\n    const hostStyle = selected ? defaultStyle : selectedStyle;\n\n    return (\n            <div className={`space-y-10`}>\n                <Title>Select your role</Title>\n                <div className={`space-y-5`}>\n                    <p>To start, please select your role.</p>\n                    <div className={`flex space-x-3 justify-between`}>\n                        <div className={musicianStyle} onClick={handleOnSelect(UserType.Musician)}>\n                            <Title level={5}>Musician</Title>\n                            <p>I'm here to find opportunities to perform.</p>\n                        </div>\n                        <div className={hostStyle} onClick={handleOnSelect(UserType.Host)}>\n                            <Title level={5}>Host</Title>\n                            <p>I'm here to find musicians to perform at my event.</p>\n                        </div>\n                    </div>\n                </div>\n                <Button type=\"primary\" size=\"large\" onClick={handleOnClick}>\n                    Next\n                </Button>\n            </div>\n    )\n}","import moment from \"moment\";\n\nexport interface Event {\n    id: number;\n    appIds: number[];\n    name: string;\n    description: string;\n    location: string;\n    startDate: moment.Moment;\n    endDate: moment.Moment;\n    audienceSize: AudienceSize;\n    accessibility: string[];\n    musicGenre: string[];\n    // yearsOfExperience?: YearsExperienceType;\n}\n\nexport interface EventDTO {\n    id: number;\n    appIds: number[];\n    name: string;\n    description: string;\n    location: string;\n    startDate: number;\n    endDate: number;\n    audienceSize: AudienceSize;\n    accessibility: string[];\n    musicGenre: string[];\n    // yearsOfExperience?: YearsExperienceType;\n}\n\nexport enum AudienceSize {\n    Small = \"1-50\",\n    Medium = \"50-100\",\n    Large = \"100+\",\n}\n\nexport enum AccessibilityTypes {\n    \"Wheelchair Accessible\" = \"WHEELCHAIR\",\n    \"Assistive Listening\" = \"HEARING\",\n}\n\nexport enum MusicGenreType {\n    EDM = \"EDM\",\n    Rock = \"ROCK\",\n    Jazz = \"JAZZ\",\n    Dubstep = \"DUBSTEP\",\n    RnB = \"RNB\",\n    Electro = \"ELECTRO\",\n    Country = \"COUNTRY\",\n    IndieRock = \"INDIEROCK\",\n    Pop = \"POP\",\n}\n\nexport enum YearsExperienceType {\n    Novice,\n    Experienced,\n    Advanced\n}\n\nexport enum EventType {\n    Casual,\n    Formal\n}","import {Button, Checkbox, Form, Input} from \"antd\";\nimport {useState} from \"react\";\nimport {User, UserType} from \"../../features/users/usersReducer/user.interface\";\nimport Title from \"antd/es/typography/Title\";\nimport {AccessibilityTypes} from \"../../features/events/eventsReducer/event.interface\";\nimport {addUser, loginUser} from \"../../features/users/usersReducer/user.actions\";\nimport {useDispatch} from \"react-redux\";\nimport {useHistory} from \"react-router-dom\";\n\ninterface Props {\n    user: User;\n    onBack: () => void;\n}\nexport function AccountInfoForm({user, onBack} : Props) {\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [accessibility, setAccessibility] = useState<string[]>([]);\n\n    const [requiredMark, setRequiredMarkType] = useState<boolean>();\n    const onRequiredTypeChange = (requiredMark: boolean) => {\n        setRequiredMarkType(requiredMark);\n    }\n\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const handleOnNext = () => {\n        const newUser = {\n            ...user,\n            firstName: firstName,\n            lastName: lastName,\n            email: email,\n            password: password,\n            accessibility: accessibility,\n        };\n        dispatch(addUser(newUser));\n        dispatch(loginUser(newUser.id));\n        newUser.userType === UserType.Musician ?\n            history.push(`/events`) :\n            history.push(`/eventDashboard`);\n    }\n\n    const accessibilityOptions = Object.keys(AccessibilityTypes).map(key => {\n        return key;\n    })\n\n    return (\n        <div className={`space-y-10`}>\n            <div>\n                <Title>Tell us about yourself</Title>\n                <p className={`pb-2`}>Please fill out the following information.</p>\n            </div>\n            <div>\n                <Form layout=\"vertical\"\n                      requiredMark={requiredMark}\n                      onValuesChange={onRequiredTypeChange}\n                      initialValues={{requiredMark}}\n                >\n                    <Form.Item label=\"First Name\"\n                               rules={[{\n                                   required: true,\n                                   message: \"Please enter your first name\",\n                               }]}\n                               name=\"firstName\">\n                        <Input placeholder=\"Enter first name\"\n                               value={firstName}\n                               onChange={(e) => setFirstName(e.target.value)}\n                        />\n                    </Form.Item>\n                    <Form.Item label=\"Last Name\"\n                               rules={[{\n                                   required: true,\n                                   message: \"Please enter your last name\",\n                               }]}\n                               name=\"lastName\">\n                        <Input placeholder=\"Enter last name\"\n                               value={lastName}\n                               onChange={(e) => setLastName(e.target.value)}\n                        />\n                    </Form.Item>\n                    <Form.Item label=\"Email Address\"\n                               rules={[{\n                                   required: true,\n                                   message: \"Please enter your email address\",\n                               }]}\n                               name=\"email\">\n                        <Input placeholder=\"Enter email address\"\n                               value={email}\n                               onChange={(e) => setEmail(e.target.value)}\n                        />\n                    </Form.Item>\n                    <Form.Item label=\"Password\"\n                               rules={[{\n                                   required: true,\n                                   message: \"Please create a password\",\n                               }]}\n                               name=\"password\"\n                    >\n                        <Input.Password placeholder=\"Create password\"\n                                        value={password}\n                                        onChange={(e) => setPassword(e.target.value)} />\n                    </Form.Item>\n                    <Form.Item label={user.userType === UserType.Host ? \"Please indicate if you provide any of the following accommodations:\" : null}\n                               name=\"accessibility\">\n                        {user.userType === UserType.Host ? <Checkbox.Group value={accessibility} options={accessibilityOptions}\n                                                                           onChange={(checkedValues) => {\n                                                                               setAccessibility(Object.values(checkedValues).map((x) => x.toString()));\n                                                                           }}\n                        /> : null}\n                    </Form.Item>\n                </Form>\n            </div>\n            <div className={`space-x-3 pt-5`}>\n                <Button type=\"ghost\" size=\"large\" onClick={onBack}>\n                    Back\n                </Button>\n                <Button type=\"primary\" size=\"large\"  onClick={handleOnNext}>\n                    Create Account\n                </Button>\n            </div>\n        </div>\n    )\n}","import {Button, Divider} from \"antd\";\nimport {useState} from \"react\";\nimport {User, UserType} from \"../features/users/usersReducer/user.interface\";\nimport {useDispatch} from \"react-redux\";\nimport {addUser, loginUser} from \"../features/users/usersReducer/user.actions\";\nimport {useHistory} from \"react-router-dom\";\nimport {SelectUserType} from \"../ui-components/createAccountSteps/SelectUserType\";\nimport {AccountInfoForm} from \"../ui-components/createAccountSteps/AccountInfoForm\";\n\nlet idGenerator = 1;\nexport function RegisterUser() {\n    const initialUserState: User = {\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        appIds: [],\n        eventIds: [],\n        password: \"\",\n        id: idGenerator++,\n        userType: UserType.Musician,\n        accessibility: [],\n    }\n    const [newUser, setNewUser] = useState<User>(initialUserState);\n    const [step, setStep] = useState(1);\n\n    const [requiredMark, setRequiredMarkType] = useState<boolean>();\n    const onRequiredTypeChange = (requiredMark: boolean) => {\n        setRequiredMarkType(requiredMark);\n    }\n\n    const dispatch = useDispatch();\n\n    const handleOnOk = () => {\n\n    }\n\n    const history = useHistory();\n\n    const RenderStep = () => {\n        switch (step) {\n            case 1:\n                return <SelectUserType user={newUser} onFinish={handleOnEdit} onNext={handleNext}/>\n            case 2:\n                return <AccountInfoForm user={newUser} onBack={handleBack} />\n            // case 3:\n            //     return <CreateProfileForm user={newUser} onFinish={handleOnEdit} onBack={handleBack} onNext={handleNext} />\n            // case 3:\n            //     return <ConfirmCreateUser user={newUser} />\n            default:\n            return <SelectUserType user={newUser} onFinish={handleOnEdit} onNext={handleNext}/>\n        }\n    }\n\n    const handleBack = () => {\n        setStep(step - 1);\n    }\n\n    const handleNext = () => {\n        setStep(step + 1);\n    }\n\n    const handleOnEdit = (user: User) => {\n        setNewUser(user);\n    }\n\n    return (\n        <div className={`max-w-lg m-auto py-28 space-y-10`}>\n            <div>\n                <p className={`pb-2 m-0 font-bold text-blue-400`}>CREATE AN ACCOUNT</p>\n                <RenderStep />\n            </div>\n            {step === 3 ? null : <div className={`pt-10`}>\n                <Divider orientation={\"center\"}>Already have an account?</Divider>\n                <div className={`text-center`}>\n                    <Button size={\"middle\"}\n                            type={\"link\"}\n                            onClick={() => history.push(`\\login`)}\n                    >\n                        Sign in</Button>\n                </div>\n            </div>}\n        </div>\n    )\n}","import {RootState} from \"../../../store\";\nimport {selectEvent} from \"../../events/eventsReducer/event.selector\";\nimport {selectUser} from \"../../users/usersReducer/user.selector\";\n\nexport const selectApplicationState = (state: RootState) => state.applications;\nexport const selectApplications = (state: RootState) => selectApplicationState(state).applications;\nexport const selectApplication = (appId: number) => {\n    return (state: RootState) => selectApplications(state)[appId]\n}\n\n// return list of Application objects given eventId\n// export const selectEventApplications = (eventId: string) => {\n//     return (state: RootState) => selectEvent(eventId)(state).appIds.map(\n//         id => selectApplication(id)(state)\n//     )\n// }\n\n// return list of Application objects given userIds\n// export const selectUserApplications = (userId: string) => {\n//     return (state: RootState) => selectUser(userId)(state).appIds.map(\n//         id => selectApplication(id)(state)\n//     )\n// }","import {useSelector} from \"react-redux\";\nimport {Button, Tag} from \"antd\";\nimport {selectApplication} from \"../applicationsReducer/application.selector\";\nimport {selectCurrUserId, selectUser} from \"../../users/usersReducer/user.selector\";\nimport {Status} from \"../applicationsReducer/application.interface\";\n\ninterface Props {\n    appId: number;\n    onStatusChangeRequest: (newStatus: Status, appId: number) => void;\n}\n\nexport function ApplicantContent({appId, onStatusChangeRequest}: Props) {\n    const application = useSelector(selectApplication(appId));\n    const currUserId = useSelector(selectCurrUserId);\n    const user = useSelector(selectUser(currUserId));\n\n    function StatusTag() {\n        switch (application.status) {\n            case Status.pending:\n                return <Tag color=\"default\">Pending</Tag>\n            case Status.accepted:\n                return <Tag color=\"success\">Accepted</Tag>\n            case Status.rejected:\n                return <Tag color=\"error\">Rejected</Tag>\n        }\n    }\n\n    const handleStatusChangeRequest = (newStatus: Status) => () => {\n        onStatusChangeRequest(newStatus, appId);\n    }\n\n    return (\n        <div className={`border border-gray-200 rounded-sm p-5`} onClick={() => (console.log())}>\n            <div className={`flex justify-between`}>\n                <div>\n                    <p>{user.firstName} {user.lastName}</p>\n                    <p>{user.email}</p>\n                    <p>{application.performName}</p>\n                    <p>{application.performDescription}</p>\n                </div>\n                <div className={`flex flex-col justify-between text-right space-y-3`}>\n                    <div>\n                        <StatusTag />\n                    </div>\n                    <div className={`flex space-x-3`}>\n                        {application.status === Status.pending ? <>\n                            <Button onClick={handleStatusChangeRequest(Status.accepted)}>Accept</Button>\n                            <Button onClick={handleStatusChangeRequest(Status.rejected)}>Reject</Button>\n                        </> : null }\n\n                    </div>\n                    {/*{reviewSubmitted ? <Tag color=\"success\">Review Submitted</Tag> :*/}\n                    {/*    <Button onClick={() => {*/}\n                    {/*        setReviewModalVisible(true)*/}\n                    {/*        setReviewSubmitted(true)*/}\n                    {/*    }}>Submit Review</Button>*/}\n                    {/*}*/}\n                </div>\n            </div>\n        </div>\n    )\n}","import {Button, Form, Input, Modal, Select, Tag} from \"antd\";\nimport {useState} from \"react\";\nimport TextArea from \"antd/es/input/TextArea\";\nimport {Application, Status} from \"../applicationsReducer/application.interface\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {addApplication, changeAppStatus} from \"../applicationsReducer/application.actions\";\nimport {selectUser} from \"../../users/usersReducer/user.selector\";\nimport {selectEvent} from \"../../events/eventsReducer/event.selector\";\nimport {useHistory} from \"react-router-dom\";\nimport {Event} from \"../../events/eventsReducer/event.interface\"\nimport {ApplicantConfirmation} from \"../applicantConfirmation/ApplicantConfirmation\";\nimport {CheckCircleOutlined} from '@ant-design/icons';\nimport {ReviewModal} from \"../reviewModal/ReviewModal\";\nimport {ApplicantContent} from \"../applicantContent/ApplicantContent\";\n\ninterface Props {\n    onCancel: () => void;\n    event: Event;\n}\n\nexport function ApplicantsModal({event, onCancel} : Props) {\n    const [statusChange, setStatusChange] = useState<boolean>(false);\n    const [confirmVisible, setConfirmVisible] = useState<boolean>(false);\n    const [currAppId, setCurrAppId] = useState<number>(0);\n\n    const dispatch = useDispatch();\n\n    const handleOnSubmitStatusChange = () => {\n        if (statusChange) {\n            dispatch(changeAppStatus(Status.accepted, currAppId))\n        } else {\n            dispatch(changeAppStatus(Status.rejected, currAppId))\n        }\n        setConfirmVisible(false);\n    }\n\n    const handleOnStatusChangeRequest = (newStatus: Status, appId: number) => {\n        if (newStatus === Status.accepted) {\n            setStatusChange(true);\n        } else {\n            setStatusChange(false);\n        }\n        setConfirmVisible(true);\n        setCurrAppId(appId);\n    }\n\n    const handleOnCancel = () => {\n        if (confirmVisible) {\n            setConfirmVisible(false);\n        } else {\n            onCancel();\n        }\n    }\n\n    const ApplicantConfirm = (\n        <Modal visible={true}\n               onCancel={() => setConfirmVisible(false)}\n               onOk={handleOnSubmitStatusChange}\n        >Are you sure you want to {statusChange ? \"accept\" : \"reject\"} this applicant?</Modal>\n    )\n\n    const appIds = event.appIds;\n\n    const applicants = appIds.map((value) => (\n            <ApplicantContent appId={value} onStatusChangeRequest={handleOnStatusChangeRequest}/>\n        ))\n    return (\n        <>\n            {confirmVisible ? ApplicantConfirm : null }\n            <Modal visible={true} onCancel={handleOnCancel} onOk={onCancel}>\n                <div className={`space-y-5`}>\n                    <p className={`text-lg font-bold`}>Applicants for {event.name}</p>\n                    {applicants.length === 0 ? <div>No applicants yet!</div> : applicants}\n                </div>\n            </Modal>\n        </>\n    )\n}","import {Button, Card, Tag} from \"antd\";\nimport {Event} from \"../eventsReducer/event.interface\"\nimport {Typography} from \"antd\";\nimport {ClockCircleOutlined, TagsOutlined, TeamOutlined} from \"@ant-design/icons\";\nimport {useState} from \"react\";\nimport {ApplyEventModal} from \"../../applications/applyEventModal/ApplyEventModal\";\nimport {ApplicantsModal} from \"../../applications/applicantsModal/ApplicantsModal\";\n\nconst {Title} = Typography;\n\ninterface Props {\n    onClick: () => void;\n    event: Event\n}\n\nexport function HostEventListingCard({onClick, event}: Props) {\n    const {id, name, musicGenre, audienceSize, startDate, endDate, accessibility, description} = event;\n    const [ApplicantsModalVisibility, setApplicantsModalVisibility] = useState<boolean>(false);\n\n    const applicantsModal = <ApplicantsModal onCancel={() => setApplicantsModalVisibility(false)}\n                                        event={event} />\n\n    if (musicGenre) {\n        console.log(musicGenre.map((x) => x))\n    }\n\n    let accessSettings: string[] = [];\n    if (accessibility) {\n        accessSettings = accessibility.map((x) => x);\n    }\n\n    return (\n        <>\n            {ApplicantsModalVisibility ? applicantsModal : null}\n            <div className={`border-b border-gray-200 py-5`} onClick={() => (console.log())}>\n                <div className={`flex justify-between`}>\n                    <div className={`space-y-4`}>\n                        <div className={`space-y-1`}>\n                            {/*<p className={`text-gray-600 font-bold m-0 pb-5`}>PAST EVENT</p>*/}\n                            {/*<p>{endDate.format('MM/DD/YYYY HH:mm')}</p>*/}\n                            <p className={`text-blue-600 hover:text-blue-400 text-base font-semibold`}>{name}</p>\n                        </div>\n                        <div className={`space-y-2`}>\n                            <div className={`flex items-center space-x-2`}>\n                                <ClockCircleOutlined />\n                                <p className={`text-gray-700 m-0`}>{startDate.format('MMMM D, yyyy') + \" at \" + startDate.format('h:mm A')}</p>\n                            </div>\n                            <div className={`flex items-center space-x-2`}>\n                                <TeamOutlined />\n                                <p className={`text-gray-700 m-0`}>{audienceSize} people</p>\n                            </div>\n                            <div className={`flex items-center space-x-2`}>\n                                <TagsOutlined />\n                                <p className={`text-gray-700 m-0`}>{musicGenre ? musicGenre.map((x) => <Tag>{x}</Tag>) : null}</p>\n                            </div>\n                            <div className={`pt-3`}>\n                                {Object.values(accessSettings).map((x) => (\n                                    <Tag color=\"purple\">{x}</Tag>\n                                ))}\n                            </div>\n                        </div>\n                    </div>\n                    <div>\n                        <Button type=\"link\" onClick={() => setApplicantsModalVisibility(true)}>View Applicants</Button>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}","import {Checkbox, DatePicker, Form, Input, Modal, Radio, Select, Typography} from \"antd\";\nimport {useState} from \"react\";\nimport moment from \"moment\";\nimport {AccessibilityTypes, AudienceSize, Event, MusicGenreType} from \"../eventsReducer/event.interface\";\nimport {useDispatch} from \"react-redux\";\nimport {addEvent} from \"../eventsReducer/event.actions\";\nimport {RangeValue} from \"rc-picker/lib/interface\";\nimport {addEventToUser} from \"../../users/usersReducer/user.actions\";\n\nconst {Title} = Typography;\nconst {TextArea} = Input;\nconst {RangePicker} = DatePicker;\nconst {Option} = Select;\n\ninterface Props {\n    onCancel: () => void;\n}\n\nlet idGenerator = 0;\n\n//visible state\nexport function CreateEventModal({onCancel}: Props) {\n    const [eventName, setEventName] = useState(\"\");\n    const [eventDescription, setEventDescription] = useState(\"\");\n    const [location, setLocation] = useState(\"\");\n\n    // what if time is unknown, or tbd?\n    const [startDate, setStartDate] = useState<moment.Moment | null>(moment());\n    const [endDate, setEndDate] = useState<moment.Moment | null>(moment());\n\n    // whats the difference between event space and audience size?\n    const [audienceSize, setAudienceSize] = useState<AudienceSize>(AudienceSize.Small);\n    const [accessibility, setAccessibility] = useState<string[]>([]);\n\n    const [musicGenre, setMusicGenre] = useState<string[]>([]);\n\n    const [requiredMark, setRequiredMarkType] = useState<boolean>();\n    const onRequiredTypeChange = (requiredMark: boolean) => {\n        setRequiredMarkType(requiredMark);\n    }\n\n    const dispatch = useDispatch();\n\n    const onAudienceChange = (value: any) => {\n        setAudienceSize(value);\n    }\n\n    const appIds: number[] = [];\n    const handleOnOk = () => {\n        // add error checking\n        if (startDate === null || endDate === null) {\n            throw new Error(\n                \"Didn't disable ok button when either `start` or `end` is null!\"\n            )\n        }\n        let newId = idGenerator++;\n        const newEvent: Event = {\n            id: newId,\n            appIds,\n            name: eventName,\n            description: eventDescription,\n            location,\n            startDate,\n            endDate,\n            musicGenre,\n            audienceSize,\n            accessibility,\n        };\n        dispatch(addEvent(newEvent));\n        dispatch(addEventToUser(newId));\n        onCancel();\n    }\n\n    const accessibilityOptions = Object.keys(AccessibilityTypes).map(key => {\n        return key;\n    })\n\n    return (\n        <Modal visible={true} onCancel={onCancel} onOk={handleOnOk}>\n            <Title level={3}>Create An Event</Title>\n            <Form layout=\"vertical\"\n                  requiredMark={requiredMark}\n                  onValuesChange={onRequiredTypeChange}\n                  initialValues={{requiredMark}}\n            >\n                <Form.Item label=\"Event Name\"\n                           name=\"eventName\"\n                           rules={[{\n                               required: true,\n                               message: \"Please enter an event name\",\n                           }]}\n                >\n                    <Input placeholder=\"Enter event name\" onChange={(e) => {\n                        setEventName(e.target.value)\n                    }}/>\n                </Form.Item>\n                <Form.Item label=\"Event Description\"\n                           name=\"eventDescription\"\n                           rules={[{\n                               required: true,\n                               message: \"Please enter an event description\",\n                           }]}\n                >\n                    <TextArea placeholder=\"Enter event description\" onChange={(e) => {\n                        setEventDescription(e.target.value)\n                    }}/>\n                </Form.Item>\n                <Form.Item label=\"Location\"\n                           name=\"location\"\n                           rules={[{\n                               required: true,\n                               message: \"Please enter the event location\",\n                           }]}\n                >\n                    <Input placeholder=\"Enter event location\" onChange={(e) => {\n                        setLocation(e.target.value)\n                    }}/>\n                </Form.Item>\n                <Form.Item label=\"Date & Time\"\n                           name=\"date\"\n                           rules={[{\n                               required: true,\n                               message: \"Please enter the event's date\",\n                           }]}\n                >\n                    <RangePicker\n                        onChange={(dateRange: RangeValue<moment.Moment>) => {\n                        if (dateRange === null) {\n                            return;\n                        }\n                        setStartDate(dateRange[0]);\n                        setEndDate(dateRange[1]);\n                         }}\n                        showTime={{format: 'HH:mm'}}\n                    />\n                </Form.Item>\n                <Form.Item label=\"Audience Size\"\n                           name=\"audienceSize\"\n                           rules={[{\n                               required: true,\n                               message: \"Please enter an estimated audience size\",\n                           }]}\n                >\n                    <Radio.Group onChange={(e) => {\n                        setAudienceSize(e.target.value)\n                    }}>\n                        <Radio.Button style={{display: 'block'}} value={AudienceSize.Small}>Small (1-50 people)</Radio.Button>\n                        <Radio.Button style={{display: 'block'}} value={AudienceSize.Medium}>Medium (50-100 people)</Radio.Button>\n                        <Radio.Button style={{display: 'block'}} value={AudienceSize.Large}>Large (100+ people)</Radio.Button>\n                    </Radio.Group>\n                </Form.Item>\n                <Form.Item label=\"Music Genre(s)\"\n                           name=\"musicGenre\"\n                           rules={[{\n                               required: true,\n                               message: \"Please enter preferred music genres\",\n                           }]}\n                >\n                    <Select mode=\"multiple\" value={musicGenre}\n                            onChange={\n                                (value, options) => {\n                                    setMusicGenre(value);\n                                }}>\n                        {Object.keys(MusicGenreType).map(key => (<Option value={key}>{key}</Option>))}\n                    </Select>\n                </Form.Item>\n                <Form.Item label=\"\"\n                           name=\"accessibility\">\n                    <div>\n                        <div className={`space-y-1 pb-5`}>\n                            <p className={`m-0`}>Accessibility</p>\n                            <p className={`text-gray-600`}>Please indicate whether you can provide any of the following accommodations</p>\n                        </div>\n                        <Checkbox.Group value={accessibility} options={accessibilityOptions}\n                                        onChange={(checkedValue) => {\n                                            console.log(Object.values(checkedValue).map((x) => x.toString()))\n                                            setAccessibility(Object.values(checkedValue).map((x) => x.toString()));\n                                        }}\n                        />\n                    </div>\n                </Form.Item>\n            </Form>\n        </Modal>\n    )\n}","import {Link, useHistory} from \"react-router-dom\";\nimport {useState} from \"react\";\nimport {CreateEventModal} from \"../../features/events/createEventModal/CreateEventModal\";\nimport {Button} from \"antd\";\nimport {UserProfileMenu} from \"../userProfileMenu/UserProfileMenu\";\n\nexport function EventManagerNavBar() {\n    const [isCreateEventVisible, setIsCreateEventVisible] = useState(false);\n    const closeModal = () => setIsCreateEventVisible(false);\n    const createEventModal = <CreateEventModal onCancel={closeModal}/>\n    const history = useHistory();\n    const activeUnderline = <div className={`mt-1 border-2 border-blue-400 rounded`}> </div>;\n\n    return (\n        <>\n            {isCreateEventVisible ? createEventModal : null}\n            <div className={`bg-gray-50 shadow-md`}>\n                <div className={`max-w-3xl m-auto py-7 flex justify-between items-center`}>\n                    <div className={``}>\n                        <Link to=\"/myEvents\" className={`text-gray-900 text-base`}>Dashboard</Link>\n                        {activeUnderline}\n                    </div>\n                    <div className={`flex items-center space-x-5`}>\n                        {/*<Button type=\"primary\" onClick={() => setIsCreateEventVisible(true)}>Create Event</Button>*/}\n                        <Button type=\"ghost\" onClick={() => history.push(\"/events\")}>Go to MusiConnect</Button>\n                        <UserProfileMenu />\n                    </div>\n                </div>\n            </div>\n        </>\n\n    )\n}","import {NavBar} from \"../ui-components/navBar/NavBar\";\nimport {useSelector} from \"react-redux\";\nimport {selectEvents, selectEventsByUser} from \"../features/events/eventsReducer/event.selector\";\nimport {useHistory} from \"react-router-dom\";\nimport {Button, Empty} from \"antd\";\nimport Title from \"antd/es/typography/Title\";\nimport {HostEventListingCard} from \"../features/events/hostEventListingCard/HostEventListingCard\";\nimport {selectCurrUserId} from \"../features/users/usersReducer/user.selector\";\nimport {EventManagerNavBar} from \"../ui-components/eventManagerNavBar/EventManagerNavBar\";\nimport {useState} from \"react\";\nimport {CreateEventModal} from \"../features/events/createEventModal/CreateEventModal\";\n\nexport function EventsDashboard() {\n    const [isCreateEventVisible, setIsCreateEventVisible] = useState(false);\n    const closeModal = () => setIsCreateEventVisible(false);\n    const createEventModal = <CreateEventModal onCancel={closeModal}/>\n\n    const currUserId = useSelector(selectCurrUserId)\n    const events = useSelector(selectEventsByUser(currUserId));\n    console.log(\"events:\", events);\n    const history = useHistory();\n\n    const noEventsMessage = <div>\n        <p className={`text-base`}>Welcome to your events dashboard! Create an event to get started.</p>\n        {/*<Button type=\"primary\" onClick={() => setIsCreateEventVisible(true)}>Create Event</Button>*/}\n    </div>\n\n    const eventsCardList = (events.length === 0) ?\n        noEventsMessage :\n        (events).map((event) => (\n            <HostEventListingCard\n                onClick={() => history.push(`/event/${event}`)}\n                event={event}/>\n        ))\n\n    return (\n        <>\n            {isCreateEventVisible ? createEventModal : null}\n            <EventManagerNavBar/>\n            <div className={`max-w-3xl m-auto py-16 space-y-5`}>\n                <div className={`flex space-x-5`}>\n                    <Title level={4}>My Events</Title>\n                    <Button type=\"primary\" onClick={() => setIsCreateEventVisible(true)}>Create Event</Button>\n                </div>\n                <div>\n                    {eventsCardList}\n                </div>\n            </div>\n        </>\n    )\n}","import Title from \"antd/es/typography/Title\";\nimport {Alert, Button, Divider, Form, Input} from \"antd\";\nimport {useState} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {loginUser} from \"../features/users/usersReducer/user.actions\";\nimport {selectUser, selectUserIdByEmail} from \"../features/users/usersReducer/user.selector\";\nimport {UserType} from \"../features/users/usersReducer/user.interface\";\n\nexport function SignIn() {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [loginErrorVisible, setLoginErrorVisible] = useState(false);\n\n    const [requiredMark, setRequiredMarkType] = useState<boolean>();\n    const onRequiredTypeChange = (requiredMark: boolean) => {\n        setRequiredMarkType(requiredMark);\n    }\n\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const userId = useSelector(selectUserIdByEmail(email));\n    const user = useSelector(selectUser(userId));\n\n    const handleOnSignIn = () => {\n        if (userId === -1) {\n            // error user not foun d\n            setLoginErrorVisible(true);\n        } else {\n            dispatch(loginUser(userId));\n            if (user.userType === UserType.Host) {\n                history.push(`/eventDashboard`);\n            } else {\n                history.push(`/events`);\n            }\n        }\n    }\n\n    const handleOnRegister = () => {\n        history.push(`register`);\n    }\n\n    const LoginError = <p className={`text-red-500`}>Your email or password is incorrect!</p>\n\n    return (\n        <div className={`max-w-sm m-auto py-28`}>\n            <Title>Sign in</Title>\n            <p className={`pb-10`}>Welcome back! Sign in with your email address to continue.</p>\n            <Form layout=\"vertical\"\n                  requiredMark={requiredMark}\n                  onValuesChange={onRequiredTypeChange}\n                  initialValues={{requiredMark}}\n            >\n                <Form.Item label=\"Email Address\"\n                           rules={[{\n                               required: true,\n                               message: \"Please enter your email\",\n                           }]}\n                           name=\"email\">\n                    <Input placeholder=\"Email address\"\n                           value={email}\n                           onChange={(e) => setEmail(e.target.value)}\n                    />\n                </Form.Item>\n                <Form.Item label=\"Password\"\n                           rules={[{\n                               required: true,\n                               message: \"Please enter your password\",\n                           }]}\n                           name=\"password\">\n                    <Input.Password placeholder=\"Password\"\n                           value={password}\n                           onChange={(e) => setPassword(e.target.value)} />\n                </Form.Item>\n            </Form>\n            {loginErrorVisible ? LoginError : null}\n            <div className={`pt-5 pb-20`}>\n                <Button size={\"large\"}\n                        type={\"primary\"}\n                        onClick={handleOnSignIn}\n                >\n                    Sign in</Button>\n            </div>\n            <Divider orientation={\"center\"}>Don't have an account yet?</Divider>\n            <div className={`text-center`}>\n                {/*<Title level={5}>Don't have an account yet?</Title>*/}\n                <Button size={\"middle\"}\n                        type={\"link\"}\n                        onClick={handleOnRegister}\n                >\n                    Register here!</Button>\n            </div>\n        </div>\n    )\n}","import {Application, Status} from \"../applicationsReducer/application.interface\";\nimport {useSelector} from \"react-redux\";\nimport {selectEvent} from \"../../events/eventsReducer/event.selector\";\nimport {Tag} from \"antd\";\n\ninterface Props {\n    application: Application,\n    onViewApplication: () => void,\n}\n\nexport function ApplicationCard({application, onViewApplication}: Props) {\n    const event = useSelector(selectEvent(application.eventId));\n    const { dateApplied, status } = application;\n\n    function StatusTag() {\n        switch (status) {\n            case Status.pending:\n                return <Tag color=\"default\">Pending</Tag>\n            case Status.accepted:\n                return <Tag color=\"success\">Accepted</Tag>\n            case Status.rejected:\n                return <Tag color=\"error\">Rejected</Tag>\n        }\n    }\n\n    const formattedDate: string = dateApplied.format('MMMM D, yyyy') + \" at \" + dateApplied.format('h:mm A')\n\n    return (\n        <div className={`hover:shadow-lg border border-gray-200 rounded-md p-5 mb-5`}>\n            <div className={`flex justify-between`}>\n                <div className={`space-y-4`}>\n                    <div className={`space-y-1`}>\n                        <p className={`text-gray-400 m-0`}>Applied {formattedDate}</p>\n                        <p className={`text-gray-900 hover:text-blue-500 text-lg font-semibold`}>{event.name}</p>\n                    </div>\n                    <div>\n                        <a onClick={onViewApplication}>View Application</a>\n                    </div>\n                </div>\n                <div>\n                    <StatusTag />\n                </div>\n            </div>\n        </div>\n    )\n}","import {NavBar} from \"../ui-components/navBar/NavBar\";\nimport {useSelector} from \"react-redux\";\nimport {useHistory} from \"react-router-dom\";\nimport {Empty} from \"antd\";\nimport {selectApplications} from \"../features/applications/applicationsReducer/application.selector\";\nimport Title from \"antd/es/typography/Title\";\nimport {EventListingCard} from \"../features/events/eventListing/EventListingCard\";\nimport {ApplicationCard} from \"../features/applications/applicationCard/ApplicationCard\";\nimport {useState} from \"react\";\n\nexport function Applications() {\n    const applications = useSelector(selectApplications);\n    const [isAppModalVisible, setAppModalVisible] = useState(false);\n    const history = useHistory();\n\n    const handleViewApp = () => {\n        setAppModalVisible(true);\n    }\n\n    const applicationsCardList = (Object.keys(applications).length === 0) ?\n        <Empty className={`py-20`} description={\"You haven't applied to any events yet!\"} /> :\n        Object.values(applications).map((value) => (\n            console.log(\"application:\", value),\n            <ApplicationCard\n                onViewApplication={handleViewApp}\n                application={value}/>\n        ))\n\n    return (\n        <>\n            {/*{isAppModalVisible ? }*/}\n            <NavBar/>\n            <div className={`max-w-3xl m-auto py-16 space-y-5`}>\n                <Title level={4}>My Applications</Title>\n                {applicationsCardList}\n            </div>\n        </>\n    )\n}","import {NavBar} from \"../ui-components/navBar/NavBar\";\nimport {selectCurrUserId, selectUser} from \"../features/users/usersReducer/user.selector\";\nimport {useSelector} from \"react-redux\";\nimport Title from \"antd/es/typography/Title\";\n\nexport function Profile() {\n    const userId = useSelector(selectCurrUserId);\n    const user = useSelector(selectUser(userId));\n\n    return (\n        <>\n            <NavBar/>\n            <div className={`max-w-3xl m-auto py-16 space-y-3`}>\n                <Title level={2}>{user.firstName} {user.lastName}</Title>\n                <p>{user.email}</p>\n            </div>\n        </>\n    )\n}","import {Button, Checkbox} from \"antd\";\nimport {useState} from \"react\";\nimport {Link} from \"react-router-dom\";\n\nexport function UserTesting() {\n    const [menuOptions, setMenuOptions] = useState<string[]>();\n\n    const options = [\n        \"Pasta carbonara\",\n        \"Margherita pizza\",\n        \"Mushroom risotto\",\n        \"Caprese salad\",\n        \"Prosciutto bruschetta\",\n        \"Lasagna\",\n        \"Almond panna cotta\",\n        \"Tiramisu\"\n    ]\n    return (\n        <div className={`max-w-md m-auto py-20 space-x-5`}>\n            <Button href={\"/checkboxMenu\"}>Checkbox Menu</Button>\n            <Button href={\"/dropdownMenu\"}>Dropdown Menu</Button>\n        </div>\n    )\n}","import {Button, Checkbox} from \"antd\";\n\nexport function CheckboxMenu() {\n\n    const options = [\n        \"Pasta carbonara\",\n        \"Margherita pizza\",\n        \"Mushroom risotto\",\n        \"Caprese salad\",\n        \"Prosciutto bruschetta\",\n        \"Lasagna\",\n        \"Almond panna cotta\",\n        \"Tiramisu\"\n    ]\n    return (\n        <div className={`max-w-md m-auto py-20 space-y-10`}>\n            <div>\n                <p>Please select the menu items you would like to add to your cart.</p>\n                <div className={`flex flex-col m-0`}>\n                    {Object.values(options).map(\n                        (value, index) =>\n                            <Checkbox style={{marginLeft: 0}}\n                                      key={index.toString()}\n                                      onChange={() => console.log()}\n                            >\n                                {options[index]}\n                            </Checkbox>)}\n                </div>\n            </div>\n            <Button type={\"primary\"} href={\"/testComplete\"}>Submit</Button>\n        </div>\n    )\n}","import {Button, Checkbox, Select} from \"antd\";\nimport {useState} from \"react\";\nimport {Option} from \"antd/es/mentions\";\n\nexport function DropDownMenu() {\n    const options = [\n        \"Pasta carbonara\",\n        \"Margherita pizza\",\n        \"Mushroom risotto\",\n        \"Caprese salad\",\n        \"Prosciutto bruschetta\",\n        \"Lasagna\",\n        \"Almond panna cotta\",\n        \"Tiramisu\"\n    ]\n    return (\n        <div className={`max-w-md m-auto py-20 space-y-10`}>\n            <div>\n                <p>Please select the menu items you would like to add to your cart.</p>\n                <Select mode=\"multiple\"\n                        allowClear\n                        style={{width: '100%'}}\n                        onChange={() => console.log()}\n                >\n                    {Object.values(options).map((value, index) => <Option key={index.toString()}>{options[index]}</Option>)}\n                </Select>\n            </div>\n            <Button type={\"primary\"} href={\"/testComplete\"}>Submit</Button>\n        </div>\n    )\n}","export function TestComplete() {\n    return (\n        <div className={`max-w-md m-auto py-20`}>\n            <p>Thank you for participating in our experiment! Have a nice day :)</p>\n        </div>\n    )\n}","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport {Events} from \"./pages/Events\";\nimport {EventListingModal} from \"./features/events/eventListing/EventListingModal\";\nimport {RegisterUser} from \"./pages/RegisterUser\";\nimport {ApplyEventModal} from \"./features/applications/applyEventModal/ApplyEventModal\";\nimport {EventsDashboard} from \"./pages/EventsDashboard\";\nimport {SignIn} from \"./pages/SignIn\";\nimport {Applications} from \"./pages/Applications\";\nimport {Profile} from \"./pages/Profile\";\nimport {UserTesting} from \"./pages/userTesting/UserTesting\";\nimport {CheckboxMenu} from \"./pages/userTesting/CheckboxMenu\";\nimport {DropDownMenu} from \"./pages/userTesting/DropdownMenu\";\nimport {TestComplete} from \"./pages/userTesting/TestComplete\";\n\nfunction App() {\n  return (\n      <>\n          <Router>\n              <Switch>\n                  <Route path=\"/events\" component={Events} />\n                  <Route path=\"/profile\" component={Profile} />\n                  <Route path=\"/eventDashboard\" component={EventsDashboard} />\n                  <Route path=\"/applications\" component={Applications} />\n                  <Route path=\"/register\" component={RegisterUser} />\n                  <Route path=\"/event/:eventId\" component={EventListingModal} />\n                  <Route path=\"/login\" component={SignIn}/>\n                  <Route path=\"/userTesting\" component={UserTesting} />\n                  <Route path=\"/checkboxMenu\" component={CheckboxMenu} />\n                  <Route path=\"/dropdownMenu\" component={DropDownMenu} />\n                  <Route path=\"/testComplete\" component={TestComplete} />\n                  <Redirect to=\"/userTesting\" />\n                  {/*<Redirect to=\"/userTesting\" />*/}\n              </Switch>\n          </Router>\n      </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {EventsState} from \"./event.types\";\nimport {ADD_APP_TO_EVENT, ADD_EVENT, AppActionTypes} from \"../../app.types\";\nimport {AudienceSize, Event} from \"./event.interface\";\nimport moment from \"moment\";\n\n// testing events\nconst event1: Event = {\n    id: 0,\n    name: \"Springfest 2021\",\n    description: \"USC Concerts Committee proudly presents Springfest, a once-in-a-lifetime experience, held at the amazing LA Memorial Coliseum and featuring iconic USC student groups such as the Trojan Marching Band and the Song Girls and a very special headliner to be announced very soon.\",\n    startDate: moment(\"20210430\"),\n    endDate: moment(\"20210430\"),\n    location: \"Online Event\",\n    accessibility: [\"Wheelchair Accessible\"],\n    audienceSize: AudienceSize.Large,\n    musicGenre: [\"Rock\"],\n    appIds: [0]\n}\n\nconst event2: Event = {\n    id: 1,\n    name: \"18th birthday party\",\n    description: \"Looking for an indie band to play at my daughter's 18th birthday party. Food and drinks provided.\",\n    startDate: moment(\"20210408\"),\n    endDate: moment(\"20210409\"),\n    location: \"NEU\",\n    accessibility: [\"Wheelchair Accessible\"],\n    audienceSize: AudienceSize.Medium,\n    musicGenre: [\"Pop\", \"Funk\", \"Indie\"],\n    appIds: []\n}\n\nconst event3: Event = {\n    id: 2,\n    name: \"Fundraiser Event - classical musicians needed\",\n    description: \"Auction fundraiser event for Rosie's Place. Looking for a small string quartet to play during the fundraiser. Compensation negotiable.\",\n    startDate: moment(\"20210408\"),\n    endDate: moment(\"20210409\"),\n    location: \"Harvard\",\n    accessibility: [],\n    audienceSize: AudienceSize.Large,\n    musicGenre: [\"Classical\"],\n    appIds: []\n}\n\nconst initialState: EventsState = {\n    events: {\n        [event1.id]: event1,\n        [event2.id]: event2,\n        [event3.id]: event3,\n    }\n};\n\n\n// const initialState: EventsState = {\n//     events: {},\n// };\n\nexport function eventsReducer(\n    state = initialState,\n    action: AppActionTypes\n): EventsState {\n    switch (action.type) {\n        case ADD_EVENT:\n            const event = action.payload;\n            return {\n                events: {\n                    ...state.events,\n                    [event.id]: event,\n                }\n            }\n        case ADD_APP_TO_EVENT:\n            const newAppId = action.payload[0];\n            const eventId = action.payload[1];\n            const newEvent = state.events[eventId];\n            const updatedAppIds = [...newEvent.appIds, newAppId];\n            newEvent.appIds = updatedAppIds;\n            return {\n                events: {\n                    ...state.events,\n                    [eventId]: newEvent,\n                }\n            }\n        default:\n            return state;\n    }\n}","import {UsersState} from \"./user.types\";\nimport {AppActionTypes} from \"../../app.types\";\nimport {User, UserType} from \"./user.interface\";\n\nconst musician: User = {\n    id: 0,\n    userType: UserType.Musician,\n    appIds: [0],\n    eventIds: [0, 1],\n    firstName: \"Musician\",\n    lastName: \"User\",\n    email: \"musician@gmail.com\",\n    password: \"musician\",\n    accessibility: [],\n}\n\nconst host: User = {\n    id: 1,\n    userType: UserType.Host,\n    appIds: [],\n    eventIds: [0, 1],\n    firstName: \"Host\",\n    lastName: \"User\",\n    email: \"host@gmail.com\",\n    password: \"host\",\n    accessibility: [],\n}\n\n\nconst initialState: UsersState = {\n    users: {[0]: musician,\n            [1]: host,\n    },\n    user: -1,\n    isLoggedIn: false,\n}\n\n// const initialState: UsersState = {\n//     users: {},\n//     user: -1,\n//     isLoggedIn: false,\n// }\n\nexport function usersReducer(\n    state = initialState,\n    action: AppActionTypes\n) {\n    switch (action.type) {\n        case \"ADD_USER\":\n            const user = action.payload;\n            return {\n                users: {\n                    ...state.users,\n                    [user.id] : user,\n                },\n                user: state.user,\n                isLoggedIn: state.isLoggedIn,\n            }\n        case \"EDIT_USER\":\n            const editedUser = action.payload;\n            return {\n                users: {\n                    ...state.users,\n                    [editedUser.id]: editedUser,\n                },\n                user: state.user,\n                isLoggedIn: state.isLoggedIn,\n            }\n        case \"LOGIN_USER\":\n            const currUser = action.payload;\n            return {\n                users: {...state.users},\n                user: currUser,\n                isLoggedIn: true,\n            }\n        case \"LOGOUT_USER\":\n            return {\n                users: state.users,\n                user: -1,\n                isLoggedIn: false,\n            }\n        case \"ADD_EVENT_TO_USER\":\n            const eventId = action.payload;\n            const updatedEvents = [...state.users[state.user].eventIds, eventId];\n            const updatedUser = {...state.users[state.user], eventIds: updatedEvents}\n            return {\n                users: {\n                    ...state.users,\n                    [state.user]: updatedUser\n                },\n                user: state.user,\n                isLoggedIn: state.isLoggedIn,\n            }\n        default:\n            return state;\n    }\n}","import {AppActionTypes} from \"../../app.types\";\nimport {ApplicationsState} from \"./application.types\";\nimport {Application, Status} from \"./application.interface\";\nimport moment from \"moment\";\n\nconst dummyApp: Application = {\n    id: 0,\n    eventId: 1,\n    performName: \"Jim On the Rocks\",\n    performDescription: \"We will play a variety of our original indie songs, see attached files\",\n    dateApplied: moment(\"20210430\"),\n    status: Status.pending,\n    userId: 0,\n}\nconst initialState: ApplicationsState = {\n    applications: {[0]: dummyApp},\n}\n\n// const initialState: ApplicationsState = {\n//     applications: {}\n// }\nexport function applicationsReducer(\n    state = initialState,\n    action: AppActionTypes\n) {\n    switch (action.type) {\n        case \"ADD_APPLICATION\":\n            const newApp = action.payload;\n            return {\n                applications: {\n                    ...state.applications,\n                    [newApp.id]: newApp,\n                }\n            }\n        case \"CHANGE_APP_STATUS\":\n            const newStatus = action.payload[0];\n            const appId = action.payload[1];\n            const updatedApp = state.applications[appId];\n            updatedApp.status = newStatus;\n            return {\n                applications: {\n                    ...state.applications,\n                    [appId]: updatedApp,\n                }\n            }\n        default:\n            return state;\n    }\n}","import {combineReducers, createStore} from \"redux\";\nimport {eventsReducer} from \"./features/events/eventsReducer/event.reducer\";\nimport {usersReducer} from \"./features/users/usersReducer/user.reducer\";\nimport {applicationsReducer} from \"./features/applications/applicationsReducer/application.reducer\";\n\nexport const rootReducer = combineReducers({\n    events: eventsReducer,\n    users: usersReducer,\n    applications: applicationsReducer\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nconst store = createStore(\n    rootReducer,\n    (window as any).__REDUX_DEVTOOLS_EXTENSION__ && (window as any).__REDUX_DEVTOOLS_EXTENSION__()\n)\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}