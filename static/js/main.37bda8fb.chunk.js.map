{"version":3,"sources":["features/app.types.ts","features/users/usersReducer/user.actions.ts","features/users/usersReducer/user.selector.ts","ui-components/userProfileMenu/UserProfileMenu.tsx","ui-components/navBar/NavBar.tsx","features/events/eventListing/EventListingCard.tsx","features/events/eventsReducer/event.selector.ts","features/events/eventListing/EventListingModal.tsx","features/applications/applicationsReducer/application.interface.ts","features/applications/applicationsReducer/application.actions.ts","features/applications/applyEventModal/ApplyEventModal.tsx","features/events/eventsReducer/event.actions.ts","pages/Events.tsx","pages/RegisterUser.tsx","features/applications/applicationsReducer/application.selector.ts","features/applications/applicantContent/ApplicantContent.tsx","features/applications/applicantsModal/ApplicantsModal.tsx","features/events/hostEventListingCard/HostEventListingCard.tsx","features/events/eventsReducer/event.interface.ts","features/events/createEventModal/CreateEventModal.tsx","ui-components/eventManagerNavBar/EventManagerNavBar.tsx","pages/MyEvents.tsx","pages/SignIn.tsx","features/applications/applicationCard/ApplicationCard.tsx","pages/Applications.tsx","App.tsx","reportWebVitals.ts","features/events/eventsReducer/event.reducer.ts","features/users/usersReducer/user.reducer.ts","features/applications/applicationsReducer/application.reducer.ts","store.ts","index.tsx"],"names":["ADD_EVENT","ADD_APP_TO_EVENT","loginUser","currUser","type","payload","selectUsersState","state","users","selectUsers","selectUser","userId","selectCurrUserId","user","UserProfileMenu","dispatch","useDispatch","currUserId","useSelector","userMenu","Item","to","onClick","logoutUser","className","overlay","trigger","size","icon","UserOutlined","Text","firstName","lastName","DownOutlined","NavBar","history","useHistory","push","Typography","Title","EventListingCard","event","onApply","name","id","musicGenre","audienceSize","startDate","accessibility","endDate","console","log","map","x","accessSettings","format","Object","values","color","selectEvents","events","selectEventsState","selectEvent","eventId","EventListingModal","closeModal","description","visible","onOk","onCancel","footer","Status","changeAppStatus","newStatus","appId","idGenerator","ApplyEventModal","useState","performName","setPerformName","performDescription","setPerformDescription","newApplication","status","pending","dateApplied","moment","newAppId","addApplicationToEvent","email","layout","label","placeholder","value","onChange","e","target","TextArea","TabPane","Tabs","Events","isEventModalVisible","setEventModalVisible","isApplyEventModalVisible","setApplyEventModalVisible","currEvent","setCurrEvent","handleOnApply","key","eventsCardList","keys","length","eventModal","applyModal","level","defaultActiveKey","tab","RegisterUser","setFirstName","setLastName","setEmail","password","setPassword","requiredMark","setRequiredMarkType","appIds","eventIds","onValuesChange","initialValues","rules","required","message","Password","newUser","addUser","orientation","selectApplications","applications","selectApplicationState","ApplicantContent","onStatusChangeRequest","application","selectApplication","StatusTag","accepted","rejected","handleStatusChangeRequest","ApplicantsModal","statusChange","setStatusChange","confirmVisible","setConfirmVisible","currAppId","setCurrAppId","handleOnStatusChangeRequest","ApplicantConfirm","HostEventListingCard","ApplicantsModalVisibility","setApplicantsModalVisibility","applicantsModal","AudienceSize","AccessibilityTypes","MusicGenreType","YearsExperienceType","EventType","Input","RangePicker","DatePicker","Option","Select","CreateEventModal","eventName","setEventName","eventDescription","setEventDescription","location","setLocation","setStartDate","setEndDate","Small","setAudienceSize","setAccessibility","setMusicGenre","accessibilityOptions","Error","newId","newEvent","addEvent","dateRange","Group","Button","style","display","Medium","Large","mode","options","checkedValue","toString","EventManagerNavBar","isCreateEventVisible","setIsCreateEventVisible","createEventModal","MyEvents","noEventsMessage","SignIn","loginErrorVisible","setLoginErrorVisible","forEach","selectUserIdByEmail","LoginError","ApplicationCard","onViewApplication","formattedDate","Applications","setAppModalVisible","handleViewApp","applicationsCardList","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","event1","event2","event3","initialState","isLoggedIn","rootReducer","combineReducers","action","updatedAppIds","updatedEvents","updatedUser","newApp","updatedApp","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.37bda8fb.chunk.js","sourcesContent":["import {Event} from \"./events/eventsReducer/event.interface\"\nimport {User} from \"./users/usersReducer/user.interface\"\nimport {Application, Status} from \"./applications/applicationsReducer/application.interface\";\n\nexport const ADD_EVENT = \"ADD_EVENT\";\nexport const ADD_USER = \"ADD_USER\";\nexport const LOGIN_USER = \"LOGIN_USER\";\nexport const ADD_APPLICATION = \"ADD_APPLICATION\";\nexport const ADD_EVENT_TO_USER = \"ADD_EVENT_TO_USER\";\nexport const LOGOUT_USER = \"LOGOUT_USER\";\nexport const ADD_APP_TO_EVENT = \"ADD_APP_TO_EVENT\";\nexport const CHANGE_APP_STATUS = \"CHANGE_APP_STATUS\";\n\nexport interface AddEventAction {\n    type: typeof ADD_EVENT;\n    payload: Event;\n}\n\nexport interface AddUserAction {\n    type: typeof ADD_USER;\n    payload: User;\n}\n\nexport interface LoginUserAction {\n    type: typeof LOGIN_USER;\n    payload: number;\n}\n\nexport interface AddEventToUserAction {\n    type: typeof ADD_EVENT_TO_USER;\n    payload: number;\n}\n\nexport interface AddApplicationAction {\n    type: typeof ADD_APPLICATION;\n    payload: Application;\n}\n\nexport interface LogoutUserAction {\n    type: typeof LOGOUT_USER;\n    payload: number;\n}\n\nexport interface AddAppToEventAction {\n    type: typeof ADD_APP_TO_EVENT;\n    payload: [number, number];\n}\n\nexport interface ChangeAppStatus {\n    type: typeof CHANGE_APP_STATUS;\n    payload: [Status, number];\n}\n\nexport type AppActionTypes = AddEventAction |\n    AddUserAction |\n    AddApplicationAction |\n    LoginUserAction |\n    AddEventToUserAction |\n    LogoutUserAction |\n    AddAppToEventAction |\n    ChangeAppStatus;","import {ADD_EVENT_TO_USER, ADD_USER, AppActionTypes, LOGIN_USER, LOGOUT_USER} from \"../../app.types\";\nimport {User} from \"../usersReducer/user.interface\"\n\nexport function addUser(newUser: User): AppActionTypes {\n    return {\n        type: ADD_USER,\n        payload: newUser,\n    }\n}\n\nexport function loginUser(currUser: number): AppActionTypes {\n    return {\n        type: LOGIN_USER,\n        payload: currUser,\n    }\n}\n\nexport function addEventToUser(eventId: number): AppActionTypes {\n    return {\n        type: ADD_EVENT_TO_USER,\n        payload: eventId,\n    }\n}\n\nexport function logoutUser(currUser: number) : AppActionTypes {\n    return {\n        type: LOGOUT_USER,\n        payload: currUser,\n    }\n}","import {RootState} from \"../../../store\";\n\nexport const selectUsersState = (state: RootState) => state.users;\nexport const selectUsers = (state: RootState) => selectUsersState(state).users;\nexport const selectUser = (userId: number) => {\n    return (state: RootState) => selectUsers(state)[userId]\n}\nexport const selectCurrUserId = (state: RootState) => selectUsersState(state).user;\nexport const selectUserIdByEmail = (email: string) => {\n    return (state: RootState) => {\n        let id = -1;\n        Object.values(selectUsers(state)).forEach(value => {\n            if (value.email === email) {\n                id = value.id;\n            }\n        })\n        return id;\n    }\n}","import {Avatar, Dropdown, Menu} from \"antd\";\nimport {DownOutlined, UserOutlined} from \"@ant-design/icons\";\nimport Text from \"antd/es/typography/Text\";\nimport {Link} from \"react-router-dom\";\nimport {logoutUser} from \"../../features/users/usersReducer/user.actions\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {selectCurrUserId, selectUser} from \"../../features/users/usersReducer/user.selector\";\n\nexport function UserProfileMenu() {\n    const dispatch = useDispatch();\n\n    const handleSignOut = () => {\n        // 0 is placeholder, logoutUser already knows currentUser\n        dispatch(logoutUser(0));\n    }\n\n    const currUserId = useSelector(selectCurrUserId);\n    const currUser = useSelector(selectUser(currUserId))\n\n    const userMenu =\n        <Menu>\n            <Menu.Item key=\"0\">\n                <Link to={\"\"}>Edit Profile</Link>\n            </Menu.Item>\n            {/*<Menu.Item key=\"1\">*/}\n            {/*    <Link to={\"/myEvents\"}>Publish Events</Link>*/}\n            {/*</Menu.Item>*/}\n            <Menu.Item key=\"1\">\n                <Link to={`/login`} onClick={handleSignOut}>Sign out</Link>\n            </Menu.Item>\n        </Menu>\n\n    return (\n        <div className={`p-2 rounded hover:bg-blue-50 items-center`}>\n            <Dropdown overlay={userMenu} trigger={['click']}>\n                <div className={`flex space-x-2 items-center`}>\n                    <Avatar size=\"small\" icon={<UserOutlined/>} />\n                    <Text>{currUser.firstName} {currUser.lastName}</Text>\n                    <DownOutlined />\n                </div>\n            </Dropdown>\n        </div>\n    )\n}","import {Link, useHistory} from \"react-router-dom\";\nimport {Avatar, Button, Dropdown, Menu} from \"antd\";\nimport {UserOutlined, DownOutlined} from '@ant-design/icons';\nimport {useState} from \"react\";\nimport {CreateEventModal} from \"../../features/events/createEventModal/CreateEventModal\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {logoutUser} from \"../../features/users/usersReducer/user.actions\";\nimport {selectCurrUserId, selectUser} from \"../../features/users/usersReducer/user.selector\";\nimport Title from \"antd/es/typography/Title\";\nimport Text from \"antd/es/typography/Text\";\nimport {UserProfileMenu} from \"../userProfileMenu/UserProfileMenu\";\n\nexport function NavBar() {\n    const history = useHistory();\n\n    return (\n        <>\n            <div className={`bg-gray-50 shadow-md`}>\n                <div className={`max-w-3xl m-auto py-7 flex justify-between items-center`}>\n                    <div className={`space-x-10`}>\n                        <Link className={`text-gray-900 text-base`} to=\"/events\">Home</Link>\n                        <Link className={`text-gray-900 text-base`} to=\"/applications\">My Applications</Link>\n                    </div>\n                    <div className={`flex items-center space-x-5`}>\n                        <Button type=\"ghost\" onClick={() => history.push(\"/myEvents\")}>Host an Event</Button>\n                        <UserProfileMenu />\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}","import {Button, Card, Tag} from \"antd\";\nimport {Event} from \"../eventsReducer/event.interface\"\nimport {Typography} from \"antd\";\nimport {Link} from \"react-router-dom\";\nimport {useState} from \"react\";\nimport {ApplyEventModal} from \"../../applications/applyEventModal/ApplyEventModal\";\n\nconst {Title} = Typography;\n\ninterface Props {\n    onClick: () => void;\n    event: Event\n    onApply: () => void;\n}\nexport function EventListingCard({onClick, event, onApply}: Props) {\n    const {id, name, musicGenre, audienceSize, startDate, endDate, accessibility} = event;\n\n    if (musicGenre) {\n        console.log(musicGenre.map((x) => x))\n    }\n\n    let accessSettings: string[] = [];\n    if (accessibility) {\n        accessSettings = accessibility.map((x) => x);\n    }\n\n    return (\n        <>\n            <div className={`hover:shadow-lg border border-gray-200 rounded-md p-5 mb-5`}>\n                <div className={`flex justify-between`}>\n                    <div className={`space-y-4`}>\n                        <div className={`space-y-1`}>\n                            <p className={`text-gray-400 m-0`}>{startDate.format('MMMM D, yyyy') + \" at \" + startDate.format('h:mm A')}</p>\n                            {/*<p>{endDate.format('MM/DD/YYYY HH:mm')}</p>*/}\n                            <p onClick={onClick} className={`text-gray-900 hover:text-blue-500 text-lg font-semibold`}>{name}</p>\n                        </div>\n                        <div className={`space-y-2`}>\n                            <p className={`text-gray-700 m-0`}>Genre(s): {musicGenre ? musicGenre.map((x) => <Tag>{x}</Tag>) : null}</p>\n                            <p className={`text-gray-700`}>Audience Size: {audienceSize}</p>\n                            <div>\n                                {Object.values(accessSettings).map((x) => (\n                                    <Tag color=\"purple\">{x}</Tag>\n                                ))}\n                            </div>\n                        </div>\n                    </div>\n                    <div>\n                        <Button type=\"link\" onClick={onApply}>Apply</Button>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}","import {RootState} from \"../../../store\"\nimport {selectCurrUserId, selectUser} from \"../../users/usersReducer/user.selector\";\n\nexport const selectEventsState = (state: RootState) => state.events\n\nexport const selectEvents = (state: RootState) => selectEventsState(state).events;\n\nexport const selectEvent = (eventId: number) => {\n    return (state: RootState) => selectEvents(state)[eventId];\n}\n\nexport const selectEventsByUser = (userId: number) => {\n    return (state: RootState) => selectUser(userId)(state).eventIds.map(\n            id => selectEvent(id)(state))\n    // error check for if the event doesn't exist\n}","import {Button, Modal, Tag, Typography} from \"antd\";\nimport {Event} from \"../eventsReducer/event.interface\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {selectEvent} from \"../eventsReducer/event.selector\";\nimport {NavBar} from \"../../../ui-components/navBar/NavBar\";\nimport React, {useState} from \"react\";\nimport {useHistory, useParams} from \"react-router-dom\";\n\nconst {Title} = Typography;\n\ninterface Props {\n    eventId: number;\n    closeModal: () => void;\n    onApply: () => void;\n}\n\nexport function EventListingModal({eventId, closeModal, onApply} : Props) {\n    const event = useSelector(selectEvent(eventId));\n\n    if (!event) {\n        return <Title>Event not found!</Title>\n    }\n\n    const {name, description, musicGenre, audienceSize, startDate, endDate, accessibility} = event;\n\n    let accessSettings: string[] = [];\n    if (accessibility) {\n        accessSettings = accessibility.map((x) => x);\n    }\n\n    return (\n            <Modal visible={true}\n                   onOk={closeModal}\n                   onCancel={closeModal}\n                   footer={[\n                       <Button key=\"cancel\" onClick={closeModal}>\n                           Close\n                       </Button>,\n                       <Button key=\"submit\" type=\"primary\" onClick={onApply}>\n                           Apply\n                       </Button>,\n                   ]}\n            >\n                <div className={`space-y-3`}>\n                    <p className={`text-gray-600 m-0`}>{startDate.format('MMMM D, yyyy') + \" at \" + startDate.format('h:mm A')}</p>\n                    {/*<p>{endDate.format('MM/DD/YYYY HH:mm')}</p>*/}\n                    <p className={`text-lg font-bold m-0`}>{name}</p>\n                    <p className={`m-0`}>{description}</p>\n                    <div className={`space-y-2`}>\n                        <p className={`text-gray-700 m-0`}>Genre(s): {musicGenre ? musicGenre.map((x) =>\n                            <Tag>{x}</Tag>) : null}</p>\n                        <p>Audience Size: {audienceSize}</p>\n                        {Object.values(accessSettings).map((x) => (\n                            <Tag color=\"purple\">{x}</Tag>\n                        ))}\n                    </div>\n                </div>\n            </Modal>\n    )\n}","import moment from \"moment\";\n\nexport interface Application {\n    id: number;\n    userId: number;\n    performName: string;\n    performDescription: string;\n    eventId: number;\n    dateApplied: moment.Moment;\n    // true = accepted, false = rejected (for now!)\n    status: Status;\n}\n\nexport enum Status {\n    accepted,\n    rejected,\n    pending\n}","import {ADD_APPLICATION, AppActionTypes, CHANGE_APP_STATUS} from \"../../app.types\";\nimport {Application, Status} from \"./application.interface\";\n\nexport function addApplication(newApp: Application): AppActionTypes {\n    return {\n        type: ADD_APPLICATION,\n        payload: newApp,\n    }\n}\n\nexport function changeAppStatus(newStatus: Status, appId: number): AppActionTypes {\n    return {\n        type: CHANGE_APP_STATUS,\n        payload: [newStatus, appId]\n    }\n}","import {Form, Input, Modal, Select} from \"antd\";\nimport {useState} from \"react\";\nimport TextArea from \"antd/es/input/TextArea\";\nimport {Application, Status} from \"../applicationsReducer/application.interface\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {addApplication} from \"../applicationsReducer/application.actions\";\nimport {selectCurrUserId, selectUser} from \"../../users/usersReducer/user.selector\";\nimport {selectEvent} from \"../../events/eventsReducer/event.selector\";\nimport {useHistory} from \"react-router-dom\";\nimport {addApplicationToEvent} from \"../../events/eventsReducer/event.actions\";\nimport moment from \"moment\";\n\nlet idGenerator = 0;\n\ninterface Props {\n    eventId: number;\n    closeModal: () => void;\n}\n\nexport function ApplyEventModal({eventId, closeModal} : Props) {\n    const [performName, setPerformName] = useState(\"\");\n    const [performDescription, setPerformDescription] = useState(\"\");\n\n    const dispatch = useDispatch();\n\n    const currUserId = useSelector(selectCurrUserId);\n    const user = useSelector(selectUser(currUserId))\n    const event = useSelector(selectEvent(eventId));\n\n    const handleOnOk = () => {\n        const id = idGenerator++;\n        let newApplication: Application = {\n            id: id,\n            eventId: eventId,\n            status: Status.pending,\n            userId: currUserId,\n            performName: performName,\n            performDescription: performDescription,\n            dateApplied: moment(),\n        }\n        dispatch(addApplication(newApplication));\n        dispatch(addApplicationToEvent(id, eventId));\n        closeModal()\n    }\n\n    const history = useHistory();\n    return (\n        <Modal visible={true} onCancel={closeModal} onOk={handleOnOk}>\n            <p className={`text-lg font-bold`}>Apply for {event.name}</p>\n            <div className={`py-5 space-y-1`}>\n                <p className={`m-0`}>Name: <b>{user.firstName} {user.lastName} </b></p>\n                <p  className={`m-0`}>Email Address: <b>{user.email}</b></p>\n            </div>\n            <Form layout=\"vertical\">\n                <Form.Item label=\"Performance Name\" name=\"performName\">\n                    <Input placeholder=\"Enter the name of your performance\"\n                           value={performName}\n                           onChange={(e) => setPerformName(e.target.value)}\n                    />\n                </Form.Item>\n                <Form.Item label={\"Performance Description\"}>\n                    <TextArea placeholder=\"Enter performance description\"\n                              value={performDescription}\n                              onChange={(e) => setPerformDescription(e.target.value)}\n                    />\n                </Form.Item>\n                <Form.Item>\n                    {/*<Select>*/}\n                    {/*    */}\n                    {/*</Select>*/}\n                </Form.Item>\n            </Form>\n        </Modal>\n    )\n}","import {ADD_APP_TO_EVENT, ADD_EVENT, AppActionTypes} from \"../../app.types\";\nimport {Event} from \"./event.interface\"\n\nexport function addEvent(newEvent: Event): AppActionTypes {\n    return {\n        type: ADD_EVENT,\n        payload: newEvent,\n    };\n}\n\nexport function addApplicationToEvent(newAppId: number, eventId: number): AppActionTypes {\n    return {\n        type: ADD_APP_TO_EVENT,\n        payload: [newAppId, eventId]\n    }\n}","import {NavBar} from \"../ui-components/navBar/NavBar\";\nimport {EventListingCard} from \"../features/events/eventListing/EventListingCard\";\nimport {useSelector} from \"react-redux\";\nimport {selectEvents} from \"../features/events/eventsReducer/event.selector\";\nimport {useState} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport {Empty, Tabs} from \"antd\";\nimport Title from \"antd/es/typography/Title\";\nimport {EventListingModal} from \"../features/events/eventListing/EventListingModal\";\nimport {Event} from \"../features/events/eventsReducer/event.interface\";\nimport {CreateEventModal} from \"../features/events/createEventModal/CreateEventModal\";\nimport {ApplyEventModal} from \"../features/applications/applyEventModal/ApplyEventModal\";\nimport {selectCurrUserId} from \"../features/users/usersReducer/user.selector\";\n\nconst { TabPane } = Tabs;\n\n// interface MatchProps {\n//     match: any;\n// }\n\nexport function Events() {\n    const events = useSelector(selectEvents);\n    const user = useSelector(selectCurrUserId);\n    const [isEventModalVisible, setEventModalVisible] = useState(false);\n    const [isApplyEventModalVisible, setApplyEventModalVisible] = useState(false);\n    const [currEvent, setCurrEvent] = useState(-1);\n    const history = useHistory();\n\n    const handleOnClickEvent = (key: number) => () => {\n        setEventModalVisible(true);\n        setCurrEvent(key)\n    }\n\n    const handleCloseEventModal = () => {\n        setEventModalVisible(false);\n    }\n\n    const handleCloseApplyModal = () => {\n        setApplyEventModalVisible(false);\n    }\n\n    const handleOnApply = (key: number) => () => {\n        setApplyEventModalVisible(true);\n        setCurrEvent(key)\n        setEventModalVisible(false);\n    }\n\n    const eventsCardList = ( Object.keys(events).length === 0) ?\n        <Empty className={`py-20`} description={\"No events available yet!\"} /> :\n        Object.values(events).map((e) => (\n                <EventListingCard\n                    onClick={handleOnClickEvent(e.id)}\n                    event={e}\n                    onApply={handleOnApply(e.id)}\n                />\n            ))\n\n    const eventModal = <EventListingModal eventId={currEvent}\n                                          closeModal={handleCloseEventModal}\n                                          onApply={handleOnApply(currEvent)}\n    />\n\n    const applyModal = <ApplyEventModal eventId={currEvent} closeModal={handleCloseApplyModal} />\n\n    return (\n        <>\n            {isApplyEventModalVisible ? applyModal : null}\n            {isEventModalVisible ? eventModal : null}\n            <NavBar/>\n            <div className={`max-w-3xl m-auto py-16 space-y-3`}>\n                <Title level={3}>Events</Title>\n                <Tabs defaultActiveKey=\"1\">\n                    <TabPane tab=\"Browse all\" key=\"1\">\n                            {eventsCardList}\n                    </TabPane>\n                </Tabs>\n            </div>\n        </>\n    )\n}","import {Button, Divider, Form, Input, Radio} from \"antd\";\nimport {useState} from \"react\";\nimport Title from \"antd/es/typography/Title\";\nimport {User} from \"../features/users/usersReducer/user.interface\";\nimport {useDispatch} from \"react-redux\";\nimport {addUser, loginUser} from \"../features/users/usersReducer/user.actions\";\nimport {useHistory} from \"react-router-dom\";\n\nlet idGenerator = 1;\nexport function RegisterUser() {\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    // const [userType, setUserType] = useState(UserType.Regular);\n\n    const [requiredMark, setRequiredMarkType] = useState<boolean>();\n    const onRequiredTypeChange = (requiredMark: boolean) => {\n        setRequiredMarkType(requiredMark);\n    }\n\n    const appIds: number[] = [];\n    const eventIds: number[] = [];\n    let id: number;\n    const dispatch = useDispatch();\n\n    const handleOnOk = () => {\n        idGenerator++;\n        id = idGenerator;\n        let newUser: User = {\n            firstName,\n            lastName,\n            email,\n            appIds,\n            eventIds,\n            password,\n            // id: id.toString(),\n            id,\n            // userType,\n        }\n        dispatch(addUser(newUser));\n        dispatch(loginUser(id));\n        // console.log(\"id of new user is:\", id.toString());\n        history.push(`/events`)\n    }\n\n    const history = useHistory();\n\n    return (\n        <div className={`max-w-sm m-auto py-28`}>\n            <Title>Create an account</Title>\n            <p className={`pb-10`}>Please fill out the following information.</p>\n            <Form layout=\"vertical\"\n                  requiredMark={requiredMark}\n                  onValuesChange={onRequiredTypeChange}\n                  initialValues={{requiredMark}}\n            >\n                <Form.Item label=\"First Name\"\n                           rules={[{\n                               required: true,\n                               message: \"Please enter your first name\",\n                           }]}\n                           name=\"firstName\">\n                    <Input placeholder=\"Enter first name\"\n                           value={firstName}\n                           onChange={(e) => setFirstName(e.target.value)}\n                    />\n                </Form.Item>\n                <Form.Item label=\"Last Name\"\n                           rules={[{\n                               required: true,\n                               message: \"Please enter your last name\",\n                           }]}\n                           name=\"lastName\">\n                    <Input placeholder=\"Enter last name\"\n                           value={lastName}\n                           onChange={(e) => setLastName(e.target.value)}\n                    />\n                </Form.Item>\n                <Form.Item label=\"Email Address\"\n                           rules={[{\n                               required: true,\n                               message: \"Please enter your email address\",\n                           }]}\n                           name=\"email\">\n                    <Input placeholder=\"Enter email address\"\n                           value={email}\n                           onChange={(e) => setEmail(e.target.value)}\n                    />\n                </Form.Item>\n                <Form.Item label=\"Password\"\n                           rules={[{\n                               required: true,\n                               message: \"Please create a password\",\n                           }]}\n                           name=\"password\"\n                >\n                    <Input.Password placeholder=\"Create password\"\n                           value={password}\n                           onChange={(e) => setPassword(e.target.value)} />\n                </Form.Item>\n                {/*<Form.Item label=\"Please select your role:\"*/}\n                {/*           rules={[{*/}\n                {/*               required: true,*/}\n                {/*               message: \"Please select user type\",*/}\n                {/*           }]}*/}\n                {/*           name=\"userType\"*/}\n                {/*           >*/}\n                {/*    <Radio.Group>*/}\n                {/*        <Radio.Button value=\"host\">Host</Radio.Button>*/}\n                {/*        <Radio.Button value=\"regular\">Musician</Radio.Button>*/}\n                {/*    </Radio.Group>*/}\n                {/*</Form.Item>*/}\n            </Form>\n            <div className={`pt-5 pb-20`}>\n                <Button size={\"large\"}\n                        type={\"primary\"}\n                        onClick={handleOnOk}\n                >\n                    Create Account</Button>\n            </div>\n            <Divider orientation={\"center\"}>Already have an account?</Divider>\n            <div className={`text-center`}>\n                <Button size={\"middle\"}\n                        type={\"link\"}\n                        onClick={() => history.push(`\\login`)}\n                >\n                    Sign in</Button>\n            </div>\n        </div>\n    )\n}","import {RootState} from \"../../../store\";\nimport {selectEvent} from \"../../events/eventsReducer/event.selector\";\nimport {selectUser} from \"../../users/usersReducer/user.selector\";\n\nexport const selectApplicationState = (state: RootState) => state.applications;\nexport const selectApplications = (state: RootState) => selectApplicationState(state).applications;\nexport const selectApplication = (appId: number) => {\n    return (state: RootState) => selectApplications(state)[appId]\n}\n\n// return list of Application objects given eventId\n// export const selectEventApplications = (eventId: string) => {\n//     return (state: RootState) => selectEvent(eventId)(state).appIds.map(\n//         id => selectApplication(id)(state)\n//     )\n// }\n\n// return list of Application objects given userIds\n// export const selectUserApplications = (userId: string) => {\n//     return (state: RootState) => selectUser(userId)(state).appIds.map(\n//         id => selectApplication(id)(state)\n//     )\n// }","import {useSelector} from \"react-redux\";\nimport {Button, Tag} from \"antd\";\nimport {selectApplication} from \"../applicationsReducer/application.selector\";\nimport {selectCurrUserId, selectUser} from \"../../users/usersReducer/user.selector\";\nimport {Status} from \"../applicationsReducer/application.interface\";\n\ninterface Props {\n    appId: number;\n    onStatusChangeRequest: (newStatus: Status, appId: number) => void;\n}\n\nexport function ApplicantContent({appId, onStatusChangeRequest}: Props) {\n    const application = useSelector(selectApplication(appId));\n    const currUserId = useSelector(selectCurrUserId);\n    const user = useSelector(selectUser(currUserId));\n\n    function StatusTag() {\n        switch (application.status) {\n            case Status.pending:\n                return <Tag color=\"default\">Pending</Tag>\n            case Status.accepted:\n                return <Tag color=\"success\">Accepted</Tag>\n            case Status.rejected:\n                return <Tag color=\"error\">Rejected</Tag>\n        }\n    }\n\n    const handleStatusChangeRequest = (newStatus: Status) => () => {\n        onStatusChangeRequest(newStatus, appId);\n    }\n\n    return (\n        <div className={`border border-gray-200 rounded-md p-5`} onClick={() => (console.log())}>\n            <div className={`flex justify-between`}>\n                <div>\n                    <p>{user.firstName} {user.lastName}</p>\n                    <p>{user.email}</p>\n                    <p>{application.performName}</p>\n                    <p>{application.performDescription}</p>\n                </div>\n                <div className={`flex flex-col justify-between text-right space-y-3`}>\n                    <div>\n                        <StatusTag />\n                    </div>\n                    <div className={`flex space-x-3`}>\n                        {application.status === Status.pending ? <>\n                            <Button onClick={handleStatusChangeRequest(Status.accepted)}>Accept</Button>\n                            <Button onClick={handleStatusChangeRequest(Status.rejected)}>Reject</Button>\n                        </> : null }\n\n                    </div>\n                    {/*{reviewSubmitted ? <Tag color=\"success\">Review Submitted</Tag> :*/}\n                    {/*    <Button onClick={() => {*/}\n                    {/*        setReviewModalVisible(true)*/}\n                    {/*        setReviewSubmitted(true)*/}\n                    {/*    }}>Submit Review</Button>*/}\n                    {/*}*/}\n                </div>\n            </div>\n        </div>\n    )\n}","import {Button, Form, Input, Modal, Select, Tag} from \"antd\";\nimport {useState} from \"react\";\nimport TextArea from \"antd/es/input/TextArea\";\nimport {Application, Status} from \"../applicationsReducer/application.interface\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {addApplication, changeAppStatus} from \"../applicationsReducer/application.actions\";\nimport {selectUser} from \"../../users/usersReducer/user.selector\";\nimport {selectEvent} from \"../../events/eventsReducer/event.selector\";\nimport {useHistory} from \"react-router-dom\";\nimport {Event} from \"../../events/eventsReducer/event.interface\"\nimport {ApplicantConfirmation} from \"../applicantConfirmation/ApplicantConfirmation\";\nimport {CheckCircleOutlined} from '@ant-design/icons';\nimport {ReviewModal} from \"../reviewModal/ReviewModal\";\nimport {ApplicantContent} from \"../applicantContent/ApplicantContent\";\n\ninterface Props {\n    onCancel: () => void;\n    event: Event;\n}\n\nexport function ApplicantsModal({event, onCancel} : Props) {\n    const [statusChange, setStatusChange] = useState<boolean>(false);\n    const [confirmVisible, setConfirmVisible] = useState<boolean>(false);\n    const [currAppId, setCurrAppId] = useState<number>(0);\n\n    const dispatch = useDispatch();\n\n    const handleOnSubmitStatusChange = () => {\n        if (statusChange) {\n            dispatch(changeAppStatus(Status.accepted, currAppId))\n        } else {\n            dispatch(changeAppStatus(Status.rejected, currAppId))\n        }\n        setConfirmVisible(false);\n    }\n\n    const handleOnStatusChangeRequest = (newStatus: Status, appId: number) => {\n        if (newStatus === Status.accepted) {\n            setStatusChange(true);\n        } else {\n            setStatusChange(false);\n        }\n        setConfirmVisible(true);\n        setCurrAppId(appId);\n    }\n\n    const handleOnCancel = () => {\n        if (confirmVisible) {\n            setConfirmVisible(false);\n        } else {\n            onCancel();\n        }\n    }\n\n    const ApplicantConfirm = (\n        <Modal visible={true}\n               onCancel={() => setConfirmVisible(false)}\n               onOk={handleOnSubmitStatusChange}\n        >Are you sure you want to {statusChange ? \"accept\" : \"reject\"} this applicant?</Modal>\n    )\n\n    const appIds = event.appIds;\n\n    return (\n        <>\n            {confirmVisible ? ApplicantConfirm : null }\n            <Modal visible={true} onCancel={handleOnCancel} onOk={onCancel}>\n                <div className={`space-y-5`}>\n                    <p className={`text-lg font-bold`}>Applicants for {event.name}</p>\n                    {appIds.map((value) => (\n                        <ApplicantContent appId={value} onStatusChangeRequest={handleOnStatusChangeRequest}/>\n                    ))}\n                </div>\n            </Modal>\n        </>\n    )\n}","import {Button, Card, Tag} from \"antd\";\nimport {Event} from \"../eventsReducer/event.interface\"\nimport {Typography} from \"antd\";\nimport {useState} from \"react\";\nimport {ApplyEventModal} from \"../../applications/applyEventModal/ApplyEventModal\";\nimport {ApplicantsModal} from \"../../applications/applicantsModal/ApplicantsModal\";\n\nconst {Title} = Typography;\n\ninterface Props {\n    onClick: () => void;\n    event: Event\n}\n\nexport function HostEventListingCard({onClick, event}: Props) {\n    const {id, name, musicGenre, audienceSize, startDate, endDate, accessibility} = event;\n    const [ApplicantsModalVisibility, setApplicantsModalVisibility] = useState<boolean>(false);\n\n    const applicantsModal = <ApplicantsModal onCancel={() => setApplicantsModalVisibility(false)}\n                                        event={event} />\n\n    if (musicGenre) {\n        console.log(musicGenre.map((x) => x))\n    }\n\n    let accessSettings: string[] = [];\n    if (accessibility) {\n        accessSettings = accessibility.map((x) => x);\n    }\n\n    return (\n        <>\n            {ApplicantsModalVisibility ? applicantsModal : null}\n            <div className={`hover:shadow-lg border border-gray-200 rounded-md p-5`} onClick={() => (console.log())}>\n                <div className={`flex justify-between`}>\n                    <div className={`space-y-4`}>\n                        <div className={`space-y-1`}>\n                            {/*<p className={`text-gray-600 font-bold m-0 pb-5`}>PAST EVENT</p>*/}\n                            <p className={`text-gray-600 m-0`}>{startDate.format('MMMM D, yyyy') + \" at \" + startDate.format('h:mm A')}</p>\n                            {/*<p>{endDate.format('MM/DD/YYYY HH:mm')}</p>*/}\n                            <p className={`text-lg font-bold`}>{name}</p>\n                        </div>\n                        <div className={`space-y-2`}>\n                            <p className={`text-gray-700 m-0`}>Genre(s): {musicGenre ? musicGenre.map((x) => <Tag>{x}</Tag>) : null}</p>\n                            <p className={`text-gray-700`}>Audience Size: {audienceSize}</p>\n                            {Object.values(accessSettings).map((x) => (\n                                <Tag color=\"purple\">{x}</Tag>\n                            ))}\n                        </div>\n                    </div>\n                    <div>\n                        <Button type=\"link\" onClick={() => setApplicantsModalVisibility(true)}>View Applicants</Button>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}","import moment from \"moment\";\n\nexport interface Event {\n    id: number;\n    appIds: number[];\n    name: string;\n    description: string;\n    location: string;\n    startDate: moment.Moment;\n    endDate: moment.Moment;\n    audienceSize: AudienceSize;\n    accessibility: string[];\n    musicGenre: string[];\n    // yearsOfExperience?: YearsExperienceType;\n}\n\nexport interface EventDTO {\n    id: number;\n    appIds: number[];\n    name: string;\n    description: string;\n    location: string;\n    startDate: number;\n    endDate: number;\n    audienceSize: AudienceSize;\n    accessibility: string[];\n    musicGenre: string[];\n    // yearsOfExperience?: YearsExperienceType;\n}\n\nexport enum AudienceSize {\n    Small = \"Small\",\n    Medium = \"Medium\",\n    Large = \"Large\",\n}\n\nexport enum AccessibilityTypes {\n    Handicap = \"HANDICAP\",\n    Hearing = \"HEARING\",\n}\n\nexport enum MusicGenreType {\n    EDM = \"EDM\",\n    Rock = \"ROCK\",\n    Jazz = \"JAZZ\",\n    Dubstep = \"DUBSTEP\",\n    RnB = \"RNB\",\n    Electro = \"ELECTRO\",\n    Country = \"COUNTRY\",\n    IndieRock = \"INDIEROCK\",\n    Pop = \"POP\",\n}\n\nexport enum YearsExperienceType {\n    Novice,\n    Experienced,\n    Advanced\n}\n\nexport enum EventType {\n    Casual,\n    Formal\n}","import {Checkbox, DatePicker, Form, Input, Modal, Radio, Select, Typography} from \"antd\";\nimport {useState} from \"react\";\nimport moment from \"moment\";\nimport {AccessibilityTypes, AudienceSize, Event, MusicGenreType} from \"../eventsReducer/event.interface\";\nimport {useDispatch} from \"react-redux\";\nimport {addEvent} from \"../eventsReducer/event.actions\";\nimport {RangeValue} from \"rc-picker/lib/interface\";\nimport {addEventToUser} from \"../../users/usersReducer/user.actions\";\n\nconst {Title} = Typography;\nconst {TextArea} = Input;\nconst {RangePicker} = DatePicker;\nconst {Option} = Select;\n\ninterface Props {\n    onCancel: () => void;\n}\n\nlet idGenerator = 0;\n\n//visible state\nexport function CreateEventModal({onCancel}: Props) {\n    const [eventName, setEventName] = useState(\"\");\n    const [eventDescription, setEventDescription] = useState(\"\");\n    const [location, setLocation] = useState(\"\");\n\n    // what if time is unknown, or tbd?\n    const [startDate, setStartDate] = useState<moment.Moment | null>(moment());\n    const [endDate, setEndDate] = useState<moment.Moment | null>(moment());\n\n    // whats the difference between event space and audience size?\n    const [audienceSize, setAudienceSize] = useState<AudienceSize>(AudienceSize.Small);\n    const [accessibility, setAccessibility] = useState<string[]>([]);\n\n    const [musicGenre, setMusicGenre] = useState<string[]>([]);\n\n    const [requiredMark, setRequiredMarkType] = useState<boolean>();\n    const onRequiredTypeChange = (requiredMark: boolean) => {\n        setRequiredMarkType(requiredMark);\n    }\n\n    const dispatch = useDispatch();\n\n    const onAudienceChange = (value: any) => {\n        setAudienceSize(value);\n    }\n\n    const appIds: number[] = [];\n    const handleOnOk = () => {\n        // add error checking\n        if (startDate === null || endDate === null) {\n            throw new Error(\n                \"Didn't disable ok button when either `start` or `end` is null!\"\n            )\n        }\n        let newId = idGenerator++;\n        const newEvent: Event = {\n            id: newId,\n            appIds,\n            name: eventName,\n            description: eventDescription,\n            location,\n            startDate,\n            endDate,\n            musicGenre,\n            audienceSize,\n            accessibility,\n        };\n        dispatch(addEvent(newEvent));\n        dispatch(addEventToUser(newId));\n        onCancel();\n    }\n\n    const accessibilityOptions = Object.keys(AccessibilityTypes).map(key => {\n        return key;\n    })\n\n    return (\n        <Modal visible={true} onCancel={onCancel} onOk={handleOnOk}>\n            <Title level={3}>Create An Event</Title>\n            <Form layout=\"vertical\"\n                  requiredMark={requiredMark}\n                  onValuesChange={onRequiredTypeChange}\n                  initialValues={{requiredMark}}\n            >\n                <Form.Item label=\"Event Name\"\n                           name=\"eventName\"\n                           rules={[{\n                               required: true,\n                               message: \"Please enter an event name\",\n                           }]}\n                >\n                    <Input placeholder=\"Enter event name\" onChange={(e) => {\n                        setEventName(e.target.value)\n                    }}/>\n                </Form.Item>\n                <Form.Item label=\"Event Description\"\n                           name=\"eventDescription\"\n                           rules={[{\n                               required: true,\n                               message: \"Please enter an event description\",\n                           }]}\n                >\n                    <TextArea placeholder=\"Enter event description\" onChange={(e) => {\n                        setEventDescription(e.target.value)\n                    }}/>\n                </Form.Item>\n                <Form.Item label=\"Location\"\n                           name=\"location\"\n                           rules={[{\n                               required: true,\n                               message: \"Please enter the event location\",\n                           }]}\n                >\n                    <Input placeholder=\"Enter event location\" onChange={(e) => {\n                        setLocation(e.target.value)\n                    }}/>\n                </Form.Item>\n                <Form.Item label=\"Date & Time\"\n                           name=\"date\"\n                           rules={[{\n                               required: true,\n                               message: \"Please enter the event's date\",\n                           }]}\n                >\n                    <RangePicker onChange={(dateRange: RangeValue<moment.Moment>) => {\n                        if (dateRange === null) {\n                            return;\n                        }\n                        setStartDate(dateRange[0]);\n                        setEndDate(dateRange[1])\n                    }}/>\n                </Form.Item>\n                <Form.Item label=\"Audience Size\"\n                           name=\"audienceSize\"\n                           rules={[{\n                               required: true,\n                               message: \"Please enter an estimated audience size\",\n                           }]}\n                >\n                    <Radio.Group onChange={(e) => {\n                        setAudienceSize(e.target.value)\n                    }}>\n                        <Radio.Button style={{display: 'block'}} value={AudienceSize.Small}>Small (1-10 people)</Radio.Button>\n                        <Radio.Button style={{display: 'block'}} value={AudienceSize.Medium}>Medium (50-100 people)</Radio.Button>\n                        <Radio.Button style={{display: 'block'}} value={AudienceSize.Large}>Large (100+ people)</Radio.Button>\n                    </Radio.Group>\n                </Form.Item>\n                <Form.Item label=\"Music Genre(s)\"\n                           name=\"musicGenre\"\n                           rules={[{\n                               required: true,\n                               message: \"Please enter preferred music genres\",\n                           }]}\n                >\n                    <Select mode=\"multiple\" value={musicGenre}\n                            onChange={\n                                (value, options) => {\n                                    setMusicGenre(value);\n                                }}>\n                        {Object.keys(MusicGenreType).map(key => (<Option value={key}>{key}</Option>))}\n                    </Select>\n                </Form.Item>\n                <Form.Item label=\"Accessibility\"\n                           name=\"accessibility\">\n                    <Checkbox.Group value={accessibility} options={accessibilityOptions}\n                        onChange={(checkedValue) => {\n                            console.log(Object.values(checkedValue).map((x) => x.toString()))\n                            setAccessibility(Object.values(checkedValue).map((x) => x.toString()));\n                        }}\n                    />\n                </Form.Item>\n            </Form>\n        </Modal>\n    )\n}","import {Link, useHistory} from \"react-router-dom\";\nimport {useState} from \"react\";\nimport {CreateEventModal} from \"../../features/events/createEventModal/CreateEventModal\";\nimport {Button} from \"antd\";\nimport {UserProfileMenu} from \"../userProfileMenu/UserProfileMenu\";\n\nexport function EventManagerNavBar() {\n    const [isCreateEventVisible, setIsCreateEventVisible] = useState(false);\n    const closeModal = () => setIsCreateEventVisible(false);\n    const createEventModal = <CreateEventModal onCancel={closeModal}/>\n    const history = useHistory();\n\n    return (\n        <>\n            {isCreateEventVisible ? createEventModal : null}\n            <div className={`bg-gray-50 shadow-md`}>\n                <div className={`max-w-3xl m-auto py-7 flex justify-between items-center`}>\n                    <div className={`space-x-10`}>\n                        <Link to=\"/myEvents\" className={`text-gray-900 text-base`}>My Events</Link>\n                    </div>\n                    <div className={`flex items-center space-x-5`}>\n                        {/*<Button type=\"primary\" onClick={() => setIsCreateEventVisible(true)}>Create Event</Button>*/}\n                        <Button type=\"ghost\" onClick={() => history.push(\"/events\")}>Return to home</Button>\n                        <UserProfileMenu />\n                    </div>\n                </div>\n            </div>\n        </>\n\n    )\n}","import {NavBar} from \"../ui-components/navBar/NavBar\";\nimport {useSelector} from \"react-redux\";\nimport {selectEvents, selectEventsByUser} from \"../features/events/eventsReducer/event.selector\";\nimport {useHistory} from \"react-router-dom\";\nimport {Button, Empty} from \"antd\";\nimport Title from \"antd/es/typography/Title\";\nimport {HostEventListingCard} from \"../features/events/hostEventListingCard/HostEventListingCard\";\nimport {selectCurrUserId} from \"../features/users/usersReducer/user.selector\";\nimport {EventManagerNavBar} from \"../ui-components/eventManagerNavBar/EventManagerNavBar\";\nimport {useState} from \"react\";\nimport {CreateEventModal} from \"../features/events/createEventModal/CreateEventModal\";\n\nexport function MyEvents() {\n    const [isCreateEventVisible, setIsCreateEventVisible] = useState(false);\n    const closeModal = () => setIsCreateEventVisible(false);\n    const createEventModal = <CreateEventModal onCancel={closeModal}/>\n\n    const currUserId = useSelector(selectCurrUserId)\n    const events = useSelector(selectEventsByUser(currUserId));\n    console.log(\"events:\", events);\n    const history = useHistory();\n\n    const noEventsMessage = <div>\n        <p className={`text-lg`}>Welcome to your events dashboard! Create an event to get started.</p>\n        <Button type=\"primary\" onClick={() => setIsCreateEventVisible(true)}>Create Event</Button>\n    </div>\n\n    const eventsCardList = (events.length === 0) ?\n        noEventsMessage :\n        (events).map((event) => (\n            <HostEventListingCard\n                onClick={() => history.push(`/event/${event}`)}\n                event={event}/>\n        ))\n\n    return (\n        <>\n            {isCreateEventVisible ? createEventModal : null}\n            <EventManagerNavBar/>\n            <div className={`max-w-3xl m-auto py-16 space-y-5`}>\n                <div className={`flex space-x-5`}>\n                    <Title level={3}>My Events</Title>\n                    <Button type=\"primary\" onClick={() => setIsCreateEventVisible(true)}>Create Event</Button>\n                </div>\n                {eventsCardList}\n            </div>\n        </>\n    )\n}","import Title from \"antd/es/typography/Title\";\nimport {Alert, Button, Divider, Form, Input} from \"antd\";\nimport {useState} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {loginUser} from \"../features/users/usersReducer/user.actions\";\nimport {selectUserIdByEmail} from \"../features/users/usersReducer/user.selector\";\n\nexport function SignIn() {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [loginErrorVisible, setLoginErrorVisible] = useState(false);\n\n    const [requiredMark, setRequiredMarkType] = useState<boolean>();\n    const onRequiredTypeChange = (requiredMark: boolean) => {\n        setRequiredMarkType(requiredMark);\n    }\n\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const userId = useSelector(selectUserIdByEmail(email));\n\n    const handleOnSignIn = () => {\n        if (userId === -1) {\n            // error user not found\n            setLoginErrorVisible(true);\n        } else {\n            dispatch(loginUser(userId));\n            history.push(`/events`);\n        }\n    }\n\n    const handleOnRegister = () => {\n        history.push(`register`);\n    }\n\n    const LoginError = <p className={`text-red-500`}>Your email or password is incorrect!</p>\n\n    return (\n        <div className={`max-w-sm m-auto py-28`}>\n            <Title>Sign in</Title>\n            <p className={`pb-10`}>Welcome back! Sign in with your email address to continue.</p>\n            <Form layout=\"vertical\"\n                  requiredMark={requiredMark}\n                  onValuesChange={onRequiredTypeChange}\n                  initialValues={{requiredMark}}\n            >\n                <Form.Item label=\"Email Address\"\n                           rules={[{\n                               required: true,\n                               message: \"Please enter your email\",\n                           }]}\n                           name=\"email\">\n                    <Input placeholder=\"Email address\"\n                           value={email}\n                           onChange={(e) => setEmail(e.target.value)}\n                    />\n                </Form.Item>\n                <Form.Item label=\"Password\"\n                           rules={[{\n                               required: true,\n                               message: \"Please enter your password\",\n                           }]}\n                           name=\"password\">\n                    <Input.Password placeholder=\"Password\"\n                           value={password}\n                           onChange={(e) => setPassword(e.target.value)} />\n                </Form.Item>\n            </Form>\n            {loginErrorVisible ? LoginError : null}\n            <div className={`pt-5 pb-20`}>\n                <Button size={\"large\"}\n                        type={\"primary\"}\n                        onClick={handleOnSignIn}\n                >\n                    Sign in</Button>\n            </div>\n            <Divider orientation={\"center\"}>Don't have an account yet?</Divider>\n            <div className={`text-center`}>\n                {/*<Title level={5}>Don't have an account yet?</Title>*/}\n                <Button size={\"middle\"}\n                        type={\"link\"}\n                        onClick={handleOnRegister}\n                >\n                    Register here!</Button>\n            </div>\n        </div>\n    )\n}","import {Application, Status} from \"../applicationsReducer/application.interface\";\nimport {useSelector} from \"react-redux\";\nimport {selectEvent} from \"../../events/eventsReducer/event.selector\";\nimport {Tag} from \"antd\";\n\ninterface Props {\n    application: Application,\n    onViewApplication: () => void,\n}\n\nexport function ApplicationCard({application, onViewApplication}: Props) {\n    const event = useSelector(selectEvent(application.eventId));\n    const { dateApplied, status } = application;\n\n    function StatusTag() {\n        switch (status) {\n            case Status.pending:\n                return <Tag color=\"default\">Pending</Tag>\n            case Status.accepted:\n                return <Tag color=\"success\">Accepted</Tag>\n            case Status.rejected:\n                return <Tag color=\"error\">Rejected</Tag>\n        }\n    }\n\n    const formattedDate: string = dateApplied.format('MMMM D, yyyy') + \" at \" + dateApplied.format('h:mm A')\n\n    return (\n        <div className={`hover:shadow-lg border border-gray-200 rounded-md p-5 mb-5`}>\n            <div className={`flex justify-between`}>\n                <div className={`space-y-4`}>\n                    <div className={`space-y-1`}>\n                        <p className={`text-gray-400 m-0`}>Applied {formattedDate}</p>\n                        <p className={`text-gray-900 hover:text-blue-500 text-lg font-semibold`}>{event.name}</p>\n                    </div>\n                    <div>\n                        <a onClick={onViewApplication}>View Application</a>\n                    </div>\n                </div>\n                <div>\n                    <StatusTag />\n                </div>\n            </div>\n        </div>\n    )\n}","import {NavBar} from \"../ui-components/navBar/NavBar\";\nimport {useSelector} from \"react-redux\";\nimport {useHistory} from \"react-router-dom\";\nimport {Empty} from \"antd\";\nimport {selectApplications} from \"../features/applications/applicationsReducer/application.selector\";\nimport Title from \"antd/es/typography/Title\";\nimport {EventListingCard} from \"../features/events/eventListing/EventListingCard\";\nimport {ApplicationCard} from \"../features/applications/applicationCard/ApplicationCard\";\nimport {useState} from \"react\";\n\nexport function Applications() {\n    const applications = useSelector(selectApplications);\n    const [isAppModalVisible, setAppModalVisible] = useState(false);\n    const history = useHistory();\n\n    const handleViewApp = () => {\n        setAppModalVisible(true);\n    }\n\n    const applicationsCardList = (Object.keys(applications).length === 0) ?\n        <Empty className={`py-20`} description={\"You haven't applied to any events yet!\"} /> :\n        Object.values(applications).map((value) => (\n            console.log(\"application:\", value),\n            <ApplicationCard\n                onViewApplication={handleViewApp}\n                application={value}/>\n        ))\n\n    return (\n        <>\n            {/*{isAppModalVisible ? }*/}\n            <NavBar/>\n            <div className={`max-w-3xl m-auto py-16 space-y-5`}>\n                <Title level={3}>My Applications</Title>\n                {applicationsCardList}\n            </div>\n        </>\n    )\n}","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport {Events} from \"./pages/Events\";\nimport {EventListingModal} from \"./features/events/eventListing/EventListingModal\";\nimport {RegisterUser} from \"./pages/RegisterUser\";\nimport {ApplyEventModal} from \"./features/applications/applyEventModal/ApplyEventModal\";\nimport {MyEvents} from \"./pages/MyEvents\";\nimport {SignIn} from \"./pages/SignIn\";\nimport {Applications} from \"./pages/Applications\";\n\nfunction App() {\n  return (\n      <>\n          <Router>\n              <Switch>\n                  <Route exact path=\"/events\" component={Events} />\n                  <Route exact path=\"/myEvents\" component={MyEvents} />\n                  <Route exact path=\"/applications\" component={Applications} />\n                  <Route exact path=\"/register\" component={RegisterUser} />\n                  <Route exact path=\"/event/:eventId\" component={EventListingModal} />\n                  <Route exact path=\"/login\" component={SignIn}/>\n                  <Redirect to=\"/login\" />\n              </Switch>\n          </Router>\n      </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {EventsState} from \"./event.types\";\nimport {ADD_APP_TO_EVENT, ADD_EVENT, AppActionTypes} from \"../../app.types\";\nimport {AudienceSize, Event} from \"./event.interface\";\nimport moment from \"moment\";\n\n// testing events\nconst event1: Event = {\n    id: 0,\n    name: \"Sample Event 1\",\n    description: \"Sample event 1 description\",\n    startDate: moment(\"20210407\"),\n    endDate: moment(\"20210407\"),\n    location: \"Tufts\",\n    accessibility: [\"Handicap\"],\n    audienceSize: AudienceSize.Large,\n    musicGenre: [\"Rock\"],\n    appIds: []\n}\n\nconst event2: Event = {\n    id: 1,\n    name: \"Sample Event 2\",\n    description: \"Sample event 2 description\",\n    startDate: moment(\"20210408\"),\n    endDate: moment(\"20210409\"),\n    location: \"NEU\",\n    accessibility: [\"Handicap\"],\n    audienceSize: AudienceSize.Medium,\n    musicGenre: [\"Pop\"],\n    appIds: []\n}\n\nconst event3: Event = {\n    id: 2,\n    name: \"Sample Event 3\",\n    description: \"Sample event 3 description\",\n    startDate: moment(\"20210408\"),\n    endDate: moment(\"20210409\"),\n    location: \"Harvard\",\n    accessibility: [],\n    audienceSize: AudienceSize.Large,\n    musicGenre: [\"Funk\"],\n    appIds: []\n}\n\nconst initialState: EventsState = {\n    events: {\n        [event1.id]: event1,\n        [event2.id]: event2,\n        [event3.id]: event3,\n    }\n};\n\n\n// const initialState: EventsState = {\n//     events: {},\n// };\n\nexport function eventsReducer(\n    state = initialState,\n    action: AppActionTypes\n): EventsState {\n    switch (action.type) {\n        case ADD_EVENT:\n            const event = action.payload;\n            return {\n                events: {\n                    ...state.events,\n                    [event.id]: event,\n                }\n            }\n        case ADD_APP_TO_EVENT:\n            const newAppId = action.payload[0];\n            const eventId = action.payload[1];\n            const newEvent = state.events[eventId];\n            const updatedAppIds = [...newEvent.appIds, newAppId];\n            newEvent.appIds = updatedAppIds;\n            return {\n                events: {\n                    ...state.events,\n                    [eventId]: newEvent,\n                }\n            }\n        default:\n            return state;\n    }\n}","import {UsersState} from \"./user.types\";\nimport {AppActionTypes} from \"../../app.types\";\nimport {User} from \"./user.interface\";\n\nconst dummyUser: User = {\n    id: 0,\n    // userType: UserType;\n    appIds: [],\n    eventIds: [0, 1],\n    firstName: \"Dummy\",\n    lastName: \"User\",\n    email: \"dummyUser@gmail.com\",\n    password: \"dummyuser\",\n}\n\nconst initialState: UsersState = {\n    users: {[0]: dummyUser},\n    user: -1,\n    isLoggedIn: false,\n}\n\n// const initialState: UsersState = {\n//     users: {},\n//     user: -1,\n//     isLoggedIn: false,\n// }\n\nexport function usersReducer(\n    state = initialState,\n    action: AppActionTypes\n) {\n    switch (action.type) {\n        case \"ADD_USER\":\n            const user = action.payload;\n            return {\n                users: {\n                    ...state.users,\n                    [user.id] : user,\n                },\n                user: state.user,\n                isLoggedIn: state.isLoggedIn,\n            }\n        case \"LOGIN_USER\":\n            const currUser = action.payload;\n            return {\n                users: {...state.users},\n                user: currUser,\n                isLoggedIn: true,\n            }\n        case \"LOGOUT_USER\":\n            return {\n                users: state.users,\n                user: -1,\n                isLoggedIn: false,\n            }\n        case \"ADD_EVENT_TO_USER\":\n            const eventId = action.payload;\n            const updatedEvents = [...state.users[state.user].eventIds, eventId];\n            const updatedUser = {...state.users[state.user], eventIds: updatedEvents}\n            return {\n                users: {\n                    ...state.users,\n                    [state.user]: updatedUser\n                },\n                user: state.user,\n                isLoggedIn: state.isLoggedIn,\n            }\n        default:\n            return state;\n    }\n}","import {AppActionTypes} from \"../../app.types\";\nimport {ApplicationsState} from \"./application.types\";\n\nconst initialState: ApplicationsState = {\n    applications: {}\n}\nexport function applicationsReducer(\n    state = initialState,\n    action: AppActionTypes\n) {\n    switch (action.type) {\n        case \"ADD_APPLICATION\":\n            const newApp = action.payload;\n            return {\n                applications: {\n                    ...state.applications,\n                    [newApp.id]: newApp,\n                }\n            }\n        case \"CHANGE_APP_STATUS\":\n            const newStatus = action.payload[0];\n            const appId = action.payload[1];\n            const updatedApp = state.applications[appId];\n            updatedApp.status = newStatus;\n            return {\n                applications: {\n                    ...state.applications,\n                    [appId]: updatedApp,\n                }\n            }\n        default:\n            return state;\n    }\n}","import {combineReducers, createStore} from \"redux\";\nimport {eventsReducer} from \"./features/events/eventsReducer/event.reducer\";\nimport {usersReducer} from \"./features/users/usersReducer/user.reducer\";\nimport {applicationsReducer} from \"./features/applications/applicationsReducer/application.reducer\";\n\nexport const rootReducer = combineReducers({\n    events: eventsReducer,\n    users: usersReducer,\n    applications: applicationsReducer\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nconst store = createStore(\n    rootReducer,\n    (window as any).__REDUX_DEVTOOLS_EXTENSION__ && (window as any).__REDUX_DEVTOOLS_EXTENSION__()\n)\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}